import{r as t,o as e,c as o,a as s,e as c,F as u,d as a,b as n}from"./app.147292e0.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";const i={},r=a(`<h1 id="\u58F0\u660E-javascript-\u51FD\u6570\u7684\u5E38\u7528\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u58F0\u660E-javascript-\u51FD\u6570\u7684\u5E38\u7528\u65B9\u6CD5" aria-hidden="true">#</a> \u58F0\u660E JavaScript \u51FD\u6570\u7684\u5E38\u7528\u65B9\u6CD5</h1><p>\u5728 JavaScript \u4E2D\u5E38\u89C1\u7684\u51FD\u6570\u58F0\u660E\u7C7B\u578B\u6709\u4EE5\u4E0B\u51E0\u79CD\u65B9\u6CD5\uFF1A</p><ul><li>\u51FD\u6570\u58F0\u660E</li><li>\u51FD\u6570\u8868\u8FBE\u5F0F</li><li>\u65B9\u6CD5\u5B9A\u4E49</li><li>\u7BAD\u5934\u51FD\u6570</li><li>\u51FD\u6570\u751F\u6210\u5668</li><li>\u51FD\u6570\u6784\u9020\u5668</li></ul><h2 id="\u51FD\u6570\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u58F0\u660E" aria-hidden="true">#</a> \u51FD\u6570\u58F0\u660E</h2><p>\u51FD\u6570\u58F0\u660E\u901A\u8FC7\u5173\u952E\u8BCD <code>function</code> \u6765\u58F0\u660E\uFF0C\u5173\u952E\u8BCD\u540E\u9762\u7D27\u8DDF\u7684\u662F\u51FD\u6570\u7684\u540D\u79F0\uFF0C\u540D\u79F0\u540E\u9762\u6709\u4E00\u4E2A\u5C0F\u62EC\u53F7(<code>()</code>)\uFF0C\u62EC\u53F7\u91CC\u9762\u653E\u7F6E\u4E86\u51FD\u6570\u7684\u53C2\u6570 <code>(para1,...,paramN)</code> \u548C\u4E00\u5BF9\u5927\u62EC\u53F7 <code>{...}</code>\uFF0C\u51FD\u6570\u7684\u4EE3\u7801\u5757\u5C31\u653E\u5728\u8FD9\u4E2A\u5927\u62EC\u53F7\u5185\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>param<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">,</span> param<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">,</span> param<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token punctuation">[</span>statements<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6765\u770B\u4E00\u4E2A\u51FD\u6570\u58F0\u660E\u7684\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,8),k=n("\u51FD\u6570\u58F0\u660E\u521B\u5EFA\u4E86\u4E00\u4E2A\u53D8\u91CF\uFF0C\u5728\u5F53\u524D\u4F5C\u7528\u57DF\uFF0C\u8FD9\u4E2A\u53D8\u91CF\u5C31\u662F\u51FD\u6570\u7684\u540D\u79F0\uFF0C\u800C\u4E14\u662F\u4E00\u4E2A\u51FD\u6570\u5BF9\u8C61\u3002\u8FD9\u4E2A\u51FD\u6570\u53D8\u91CF\u5B58\u5728 "),b={href:"http://www.w3cplus.com/javascript/javascript-hoisting-in-details.html",target:"_blank",rel:"noopener noreferrer"},d=n("\u53D8\u91CF\u751F\u547D\u63D0\u5347"),m=n("\uFF0C\u5B83\u4F1A\u63D0\u5230\u5F53\u524D\u4F5C\u7528\u57DF\u7684\u9876\u90E8\uFF0C\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5728\u51FD\u6570\u58F0\u660E\u4E4B\u524D\u53EF\u4EE5\u8C03\u7528\u3002"),f=a(`<h2 id="\u51FD\u6570\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u51FD\u6570\u8868\u8FBE\u5F0F</h2><p>\u5B83\u4E0E\u51FD\u6570\u58F0\u660E\u7684\u533A\u522B\uFF1A\u51FD\u6570\u58F0\u660E\u603B\u662F\u4EE5 <code>function</code> \u5173\u952E\u8BCD\u5F00\u59CB\uFF0C\u5982\u679C\u4E0D\u662F\uFF0C\u90A3\u5B83\u5C31\u662F\u4E00\u4E2A\u51FD\u6570\u8868\u8FBE\u5F0F\u3002</p><p>\u51FD\u6570\u8868\u8FBE\u5F0F\u4E0D\u662F\u4EE5 function \u5173\u952E\u8BCD\u5F00\u59CB\uFF08\u76EE\u524D\u90FD\u4E00\u822C\u51FA\u73B0\u5728\u4EE3\u7801\u7684\u4E2D\u95F4\u5730\u65B9\uFF09\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">sum</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u51FD\u6570\u8D4B\u503C\u7ED9\u4E00\u4E2A\u53D8\u91CF\u3002\u8FD9\u662F\u4E00\u79CD\u58F0\u660E\u51FD\u6570\u7684\u65B9\u5F0F\uFF0C\u5DE6\u8FB9 <code>sum</code> \u662F\u4E00\u4E2A\u53D8\u91CF\uFF0C\u53F3\u8FB9\u662F\u4E00\u4E2A\u51FD\u6570\u7684\u8868\u8FBE\u5F0F\u3002\u610F\u601D\u5C31\u662F\u628A\u4E00\u4E2A\u533F\u540D\u7684\u51FD\u6570\u8868\u8FBE\u5F0F\u8D4B\u503C\u7ED9\u4E86\u53D8\u91CF sum\uFF0C\u53EA\u662F\u58F0\u660E\u4E86\u4E00\u4E2A\u53D8\u91CF\u6307\u5411\u4E86\u4E00\u4E2A\u51FD\u6570\u5BF9\u8C61\u3002</p><h2 id="\u6761\u4EF6\u4E2D\u7684\u51FD\u6570\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u6761\u4EF6\u4E2D\u7684\u51FD\u6570\u58F0\u660E" aria-hidden="true">#</a> \u6761\u4EF6\u4E2D\u7684\u51FD\u6570\u58F0\u660E</h2><p>\u5F53\u51FD\u6570\u58F0\u660E\u51FA\u73B0 <code>if</code>\u3001<code>for</code> \u6216 <code>while</code> \u8FD9\u6837\u7684\u6761\u4EF6\u8BED\u53E5\u5757 <code>{...}</code> \u65F6\uFF0C\u5728\u4E00\u4E9B JavaScript \u73AF\u5883\u5185\u53EF\u80FD\u4F1A\u629B\u51FA\u4E00\u4E2A\u5F15\u7528\u9519\u8BEF\u3002\u8BA9\u6211\u4EEC\u6765\u770B\u770B\u5728\u4E25\u683C\u6A21\u5F0F\u4E0B\uFF0C\u51FD\u6570\u58F0\u660E\u51FA\u73B0\u5728\u4E00\u4E2A\u6761\u4EF6\u8BED\u53E5\u5757\u4E2D\uFF0C\u770B\u770B\u4F1A\u53D1\u751F\u4EC0\u4E48\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token string">&#39;true ok&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token string">&#39;false ok&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> ok <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; true</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Throws &quot;ReferenceError: ok is not defined&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u5F53\u8C03\u7528 <code>ok()</code> \u51FD\u6570\u65F6\uFF0CJavaScript \u629B\u51FA\u4E00\u4E2A\u5F02\u5E38\u9519\u8BEF <code>&quot;ReferenceError: ok is not defined&quot;</code>\uFF0C\u56E0\u4E3A\u51FD\u6570\u58F0\u660E\u51FA\u73B0\u5728\u4E00\u4E2A\u6761\u4EF6\u8BED\u53E5\u5757\u5185\u3002\u6CE8\u610F\uFF0C\u8FD9\u79CD\u60C5\u51B5\u9002\u7528\u4E8E\u975E\u4E25\u683C\u6A21\u5F0F\u73AF\u5883\u4E0B\uFF0C\u8FD9\u8BA9\u4EBA\u66F4\u611F\u5230\u56F0\u60D1\u3002</p><p>\u4E00\u822C\u6765\u8BF4\uFF0C\u5728\u8FD9\u6837\u7684\u60C5\u51B5\u4E4B\u4E0B\uFF0C\u5F53\u4E00\u4E2A\u51FD\u6570\u5E94\u8BE5\u521B\u5EFA\u5728\u57FA\u4E8E\u67D0\u4E9B\u6761\u4EF6\u5185\u65F6\uFF0C\u5E94\u8BE5\u4F7F\u7528\u4E00\u4E2A\u51FD\u6570\u8868\u8FBE\u5F0F\uFF0C\u800C\u4E0D\u5E94\u8BE5\u4F7F\u7528\u51FD\u6570\u58F0\u660E\u3002\u6BD4\u5982\u4E0B\u9762\u8FD9\u4E2A\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>

  <span class="token keyword">var</span> ok<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">ok</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token string">&#39;true ok&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">ok</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token string">&#39;false ok&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> ok <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; true</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; &#39;true ok&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u56E0\u4E3A\u51FD\u6570\u662F\u4E00\u4E2A\u666E\u901A\u5BF9\u8C61\uFF0C\u6839\u636E\u4E0D\u540C\u7684\u6761\u4EF6\uFF0C\u5C06\u5176\u5206\u914D\u7ED9\u4E00\u4E2A\u53D8\u91CF\uFF0C\u662F\u4E00\u4E2A\u4E0D\u9519\u7684\u9009\u62E9\u3002\u8C03\u7528 <code>ok()</code> \u51FD\u6570\u4E5F\u80FD\u6B63\u5E38\u5DE5\u4F5C\uFF0C\u4E0D\u4F1A\u629B\u51FA\u4EFB\u4F55\u9519\u8BEF\u3002</p><h2 id="\u51FD\u6570\u8868\u8FBE\u5F0F-1" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u8868\u8FBE\u5F0F-1" aria-hidden="true">#</a> \u51FD\u6570\u8868\u8FBE\u5F0F</h2><p>\u51FD\u6570\u8868\u8FBE\u5F0F\u662F\u7531\u4E00\u4E2A <code>function</code> \u5173\u952E\u8BCD\uFF0C\u7D27\u968F\u5176\u540E\u7684\u662F\u4E00\u4E2A\u53EF\u9009\u7684\u51FD\u6570\u540D\uFF0C\u4E00\u4E32\u53C2\u6570 <code>(para1,...,paramN)</code> \u653E\u5728\u5C0F\u62EC\u53F7\u5185\u548C\u4EE3\u7801\u4E3B\u4F53\u653E\u5728\u5927\u62EC\u53F7\u5185 <code>{...}</code>\u3002</p><p>\u4E00\u4E9B\u51FD\u6570\u8868\u8FBE\u5F0F\u7684\u4F7F\u7528\u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">count</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> methods <span class="token operator">=</span> <span class="token punctuation">{</span>
  numbers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token function-variable function">sum</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> acc <span class="token operator">+</span> num<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; 3</span>
methods<span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; 14</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u51FD\u6570\u8868\u8FBE\u5F0F\u521B\u5EFA\u4E86\u4E00\u4E2A\u51FD\u6570\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u7528\u5728\u4E0D\u540C\u7684\u60C5\u51B5\u4E0B\uFF1A</p><ul><li>\u5F53\u4F5C\u4E00\u4E2A\u5BF9\u8C61\u8D4B\u503C\u7ED9\u4E00\u4E2A\u53D8\u91CF <code>count = function(...) {...}</code></li><li>\u5728\u4E00\u4E2A\u5BF9\u8C61\u4E0A\u521B\u5EFA\u4E00\u4E2A\u65B9\u6CD5 <code>sum: function() {...}</code></li><li>\u5F53\u4F5C\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570 <code>.reduce(function(...) {...})</code></li></ul><p>\u51FD\u6570\u8868\u8FBE\u5F0F\u5728 JavaScript \u4E2D\u7ECF\u5E38\u4F7F\u7528\u3002\u5927\u591A\u6570\u7684\u65F6\u5019\uFF0C\u5F00\u53D1\u4EBA\u5458\u5904\u7406\u8FD9\u79CD\u7C7B\u578B\u7684\u51FD\u6570\uFF0C\u559C\u6B22\u4F7F\u7528\u7BAD\u5934\u51FD\u6570\u3002</p><h2 id="\u547D\u540D\u51FD\u6570\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u547D\u540D\u51FD\u6570\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u547D\u540D\u51FD\u6570\u8868\u8FBE\u5F0F</h2><p>\u5F53\u51FD\u6570\u6CA1\u6709\u4E00\u4E2A\u540D\u79F0\uFF08\u540D\u79F0\u5C5E\u6027\u662F\u4E00\u4E2A\u7A7A\u5B57\u7B26\u4E32\uFF09\u65F6\u8FD9\u4E2A\u51FD\u6570\u662F\u4E00\u4E2A\u533F\u540D\u51FD\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">getType</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">variable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">typeof</span> variable<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
getType<span class="token punctuation">.</span>name<span class="token punctuation">;</span> <span class="token comment">// =&gt; &#39;getType&#39;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>getType</code> \u5C31\u662F\u4E00\u4E2A\u533F\u540D\u51FD\u6570\uFF0C\u5176 <code>getType.name</code> \u7684\u503C\u4E3A <code>&#39;getType&#39;</code>\u3002</p><p>\u5F53\u8868\u8FBE\u5F0F\u6307\u5B9A\u4E86\u4E00\u4E2A\u540D\u79F0\u65F6\uFF0C\u8FD9\u5C31\u662F\u4E00\u4E2A\u547D\u540D\u51FD\u6570\u8868\u8FBE\u5F0F\u3002\u5B83\u548C\u7B80\u5355\u7684\u51FD\u6570\u8868\u8FBE\u5F0F\u76F8\u6BD4\u5177\u6709\u4E00\u4E9B\u989D\u5916\u7684\u5C5E\u6027\u3002</p><ul><li>\u521B\u5EFA\u4E00\u4E2A\u547D\u540D\u51FD\u6570\uFF0C\u5176 <code>name</code> \u5C5E\u6027\u5C31\u662F\u51FD\u6570\u540D</li><li>\u5728\u51FD\u6570\u4F53\u4E2D\u5177\u6709\u548C\u51FD\u6570\u5BF9\u8C61\u76F8\u540C\u540D\u79F0\u7684\u4E00\u4E2A\u53D8\u91CF</li></ul><p>\u6211\u4EEC\u4F7F\u7528\u4E0A\u9762\u7684\u4F8B\u5B50\uFF0C\u4E0D\u540C\u7684\u662F\u5728\u51FD\u6570\u8868\u8FBE\u5F0F\u5185\u6307\u5B9A\u4E86\u4E00\u4E2A\u540D\u79F0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">getType</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">funName</span><span class="token punctuation">(</span><span class="token parameter">variable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> funName <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; true</span>
  <span class="token keyword">return</span> <span class="token keyword">typeof</span> variable<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; &#39;number&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>getType<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; &#39;funName&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> funName <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; false</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><code>function funName(variable) {...}</code> \u662F\u4E00\u4E2A\u547D\u540D\u51FD\u6570\u8868\u8FBE\u5F0F\u3002\u5728\u51FD\u6570\u4F5C\u7528\u8303\u56F4\u5185\u5B58\u4E00\u4E2A <code>funName</code> \u53D8\u91CF\u3002\u51FD\u6570\u5BF9\u8C61\u7684 <code>name</code>\u5C5E\u6027\u5C31\u662F\u51FD\u6570\u7684\u540D\u79F0 <code>funName</code>\u3002</p><h2 id="\u65B9\u6CD5\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5\u5B9A\u4E49" aria-hidden="true">#</a> \u65B9\u6CD5\u5B9A\u4E49</h2><p>\u65B9\u6CD5\u5B9A\u4E49\u53EF\u4EE5\u5728 object literals \u548C ES6 class \u65F6\u5B9A\u4E49\u3002\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u51FD\u6570\u7684\u540D\u79F0\uFF0C\u5E76\u7D27\u968F\u5176\u540E\u8DDF\u4E00\u5BF9\u5C0F\u62EC\u53F7\u653E\u7F6E\u53C2\u6570\u5217\u8868 <code>(para1,...,paramN)</code> \u548C\u51FD\u6570\u4E3B\u4F53\u4EE3\u7801\u653E\u5728\u4E00\u4E2A\u5927\u62EC\u5185 <code>{...}</code>\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">sum</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">subtraction</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">multiplication</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">*</span> b<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

foo<span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5</span>
foo<span class="token punctuation">.</span><span class="token function">subtraction</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -3</span>
foo<span class="token punctuation">.</span><span class="token function">multiplication</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 8</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u65B9\u6CD5\u5B9A\u4E49\u548C\u4F20\u7EDF\u7684\u5C5E\u6027\u5B9A\u4E49\u6709\u70B9\u7C7B\u4F3C\uFF0C\u901A\u4E00\u4E2A\u5192\u53F7 <code>:</code> \u628A\u540D\u79F0\u548C\u51FD\u6570\u8868\u8FBE\u5F0F\u8FDE\u63A5\u5728\u4E00\u8D77\uFF0C\u6BD4\u5982 <code>add: function(...) {...}</code>\u3002</p><ul><li>\u66F4\u77ED\u7684\u8BED\u6CD5\u66F4\u6613\u8BFB\u548C\u5199</li><li>\u65B9\u6CD5\u5B9A\u4E49\u521B\u5EFA\u547D\u540D\u51FD\u6570\uFF0C\u548C\u51FD\u6570\u8868\u8FBE\u5F0F\u521A\u597D\u76F8\u53CD\u3002\u6709\u5229\u4E8E\u7528\u4E8E\u8C03\u8BD5</li></ul><p>\u6CE8\u610F\uFF0C\u4F7F\u7528 <code>class</code> \u8BED\u6CD5\u9700\u8981\u77ED\u5F62\u5F0F\u65B9\u6CD5\u6765\u58F0\u660E\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Star</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> message<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> sun <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Star</span><span class="token punctuation">(</span><span class="token string">&#39;Sun&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
sun<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token string">&#39; is shining&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; &#39;Sun is shining&#39;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="\u7BAD\u5934\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u7BAD\u5934\u51FD\u6570" aria-hidden="true">#</a> \u7BAD\u5934\u51FD\u6570</h2><p>\u7BAD\u5934\u51FD\u6570\u7684\u5B9A\u4E49\u662F\u4F7F\u7528\u4E00\u5BF9\u5C0F\u62EC\u53F7\uFF0C\u62EC\u53F7\u5185\u662F\u4E00\u7CFB\u5217\u7684\u53C2\u6570 <code>(param1,param2,...,paramN)</code>,\u540E\u9762\u7D27\u8DDF <code>=&gt;</code> \u7B26\u53F7\u548C <code>{...}</code>\uFF0C\u4EE3\u7801\u4E3B\u4F53\u653E\u7F6E\u5728\u8FD9\u5BF9\u5927\u62EC\u53F7\u5185\u3002</p><p>\u5F53\u7BAD\u5934\u51FD\u6570\u53EA\u6709\u4E00\u4E2A\u53C2\u6570\u65F6\uFF0C\u53EF\u4EE5\u7701\u7565\u8FD9\u5BF9\u5C0F\u62EC\u53F7\uFF0C\u53E6\u5916\u5B83\u53EA\u5305\u542B\u4E00\u4E2A\u58F0\u660E\u65F6\uFF0C\u5927\u62EC\u53F7\u90FD\u53EF\u4EE5\u7701\u7565\u3002</p><p>\u4E0B\u9762\u7684\u793A\u4F8B\u5C31\u662F\u4E00\u4E2A\u7BAD\u5934\u51FD\u6570\u7684\u57FA\u672C\u7528\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">absValue</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">-</span>number<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> number<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">absValue</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; 10</span>
<span class="token function">absValue</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; 5</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><code>absValue</code> \u662F\u4E00\u4E2A\u7BAD\u5934\u51FD\u6570\uFF0C\u8FD9\u4E2A\u51FD\u6570\u4E3B\u8981\u529F\u80FD\u5C31\u662F\u8BA1\u7B97\u4E00\u4E2A\u6570\u7684\u7EDD\u5BF9\u503C\u3002</p><p>\u51FD\u6570\u58F0\u660E\u4F7F\u7528\u7BAD\u5934\u51FD\u6570\uFF0C\u5176\u4E2D <code>=&gt;</code> \u5177\u6709\u4EE5\u4E0B\u5C5E\u6027\uFF1A</p><ul><li>\u7BAD\u5934\u51FD\u6570\u4E0D\u521B\u5EFA\u6267\u884C\u81EA\u5DF1\u7684\u4E0A\u4E0B\u6587\uFF08\u51FD\u6570\u8868\u8FBE\u5F0F\u6216\u51FD\u6570\u58F0\u660E\u5F0F\u76F8\u53CD\uFF0C\u521B\u5EFA\u4E0D\u521B\u5EFA\u53D6\u51B3\u4E8E <code>this</code> \u7684\u8C03\u7528\uFF09</li><li>\u7BAD\u5934\u51FD\u6570\u662F\u4E00\u4E2A\u533F\u540D\u51FD\u6570\uFF1A<code>name</code> \u662F\u4E00\u4E2A\u7A7A\u5B57\u7B26\u4E32 <code>&#39;&#39;</code>\uFF08\u51FD\u6570\u58F0\u660E\u5F0F\u76F8\u53CD\uFF0C\u5B83\u6709\u4E00\u4E2A\u540D\u5B57\uFF09</li><li><code>arguments</code> \u5BF9\u8C61\u4E0D\u53EF\u4F7F\u7528\u7BAD\u5934\u51FD\u6570\uFF08\u4E0E\u5176\u5B83\u58F0\u660E\u7C7B\u578B\u76F8\u53CD\uFF0C\u5176\u4ED6\u7C7B\u578B\u63D0\u4F9B <code>arguments</code> \u5BF9\u8C61\uFF09</li></ul><h2 id="\u51FD\u6570\u751F\u6210\u5668" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u751F\u6210\u5668" aria-hidden="true">#</a> \u51FD\u6570\u751F\u6210\u5668</h2><p>\u751F\u6210\u51FD\u6570\u5728 JavaScript \u4E2D\u4F1A\u8FD4\u56DE\u4E00\u4E2A Generator \u5BF9\u8C61\u3002\u5176\u8BED\u6CD5\u7C7B\u4F3C\u4E8E\u51FD\u6570\u8868\u8FBE\u5F0F\u3001\u51FD\u6570\u58F0\u660E\u5F0F\u548C\u65B9\u6CD5\u58F0\u660E\uFF0C\u4E0D\u540C\u7684\u662F\uFF0C\u5B83\u9700\u8981\u5728 <code>function</code> \u540E\u6DFB\u52A0\u4E00\u4E2A <code>*</code> \u7B26\u53F7\u3002</p><p>\u751F\u6210\u5668\u51FD\u6570\u53EF\u4EE5\u6309\u4EE5\u4E0B\u8FD9\u4E9B\u65B9\u5F0F\u6765\u58F0\u660E\u51FD\u6570\uFF1A</p><ol><li>\u51FD\u6570\u58F0\u660E <code>function* &lt;name&gt;()</code>:</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">indexGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> index<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token function">indexGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; 0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; 1</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ol start="2"><li>\u51FD\u6570\u8868\u8FBE\u5F0F <code>function* ()</code>:</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">indexGenerator</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> index<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token function">indexGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; 0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; 1</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ol start="3"><li>\u65B9\u6CD5\u751F\u6210 <code>\\*&lt;name&gt;</code>:</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">*</span><span class="token function">indexGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">yield</span> index<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> g <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">indexGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; 0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; 1</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u4E0A\u9762\u4E09\u79CD\u65B9\u5F0F\u751F\u6210\u7684\u51FD\u6570\u90FD\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u751F\u6210\u5668\u5BF9\u8C61 <code>g</code>\u3002\u7136\u540E <code>g</code> \u53EF\u4EE5\u751F\u6210\u4E00\u7CFB\u5217\u7684\u6570\u5B57\u3002</p><h2 id="\u51FD\u6570\u6784\u9020\u5668-new-function" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u6784\u9020\u5668-new-function" aria-hidden="true">#</a> \u51FD\u6570\u6784\u9020\u5668: new Function</h2><p>\u5728 JavaScript \u51FD\u6570\u4E2D\u7B2C\u4E00\u4E2A\u7C7B(class object)\u5BF9\u8C61: \u51FD\u6570\u662F\u4E00\u4E2A\u666E\u901A\u7684\u5BF9\u8C61\u7C7B\u578B\u662F <code>function</code>\u3002</p><p>\u8FD9\u79CD\u58F0\u660E\u7684\u65B9\u5F0F\u521B\u5EFA\u76F8\u540C\u7684\u51FD\u6570\u5BF9\u8C61\u7C7B\u578B\uFF0C\u6765\u770B\u4E00\u4E2A\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sum1</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> <span class="token function-variable function">sum2</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> <span class="token function-variable function">sum3</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> sum1 <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> sum2 <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> sum3 <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; true</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u51FD\u6570\u5BF9\u8C61\u7C7B\u578B\u6709\u4E00\u4E2A\u6784\u9020\u5668(constructor): <code>Function</code>\u3002</p><p>\u5F53 <code>Function</code> \u5F53\u4F5C\u6784\u9020\u5668(constructor) <code>new Function(arg1,arg2,...,argN,bodyString)</code>,\u90A3\u4E48 <code>Function</code> \u6784\u9020\u5668\u4F1A\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684 <code>Function</code> \u5BF9\u8C61(<code>new Function</code>)\u3002\u5176\u4E2D\u53C2\u6570 <code>arg1,arg2,...,argN</code> \u4F1A\u4F20\u9012\u7ED9\u6784\u9020\u5668(constructor)\u6210\u4E3A\u65B0\u51FD\u6570\u7684\u53C2\u6570\uFF0C\u800C\u4E14\u6700\u540E\u4E00\u4E2A\u53C2\u6570 <code>bodyString</code> \u7528\u4F5C\u51FD\u6570\u4F53\u4EE3\u7801\u3002</p><p>\u6765\u770B\u4E00\u4E2A\u793A\u4F8B\uFF0C\u521B\u5EFA\u4E00\u4E2A\u51FD\u6570\uFF0C\u6C42\u4E24\u4E2A\u6570\u7684\u548C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> numberA <span class="token operator">=</span> <span class="token string">&#39;numberA&#39;</span><span class="token punctuation">,</span>
  numberB <span class="token operator">=</span> <span class="token string">&#39;numberB&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> sumFunction <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span>numberA<span class="token punctuation">,</span> numberB<span class="token punctuation">,</span> <span class="token string">&#39;return numberA + numberB&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">sumFunction</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; 25</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>sumFunction</code> \u521B\u5EFA\u7684 <code>Function</code> \u6784\u9020\u5668\u8C03\u7528\u4E86 <code>numberA</code> \u548C <code>numberB</code> \u4E24\u4E2A\u53C2\u6570\uFF0C\u5E76\u4E14\u5728\u51FD\u6570\u4E3B\u4F53\u5185\u6267\u884C <code>return numberA + numberB</code>\u3002</p><p>\u8FD9\u79CD\u65B9\u5F0F\u521B\u5EFA\u7684\u51FD\u6570\u4E0D\u80FD\u8BBF\u95EE\u5F53\u524D\u7684\u4F5C\u7528\u57DF\uFF0C\u56E0\u4E3A\u6CA1\u529E\u6CD5\u521B\u5EFA\u95ED\u5305\u3002\u4ED6\u4EEC\u603B\u662F\u5728\u5168\u5C40\u4F5C\u7528\u57DF\u5185\u521B\u5EFA\u7684\u3002</p><p>\u4E00\u4E2A\u53EF\u80FD\u5C31\u7528 <code>new Function</code> \u7684\u6700\u4F73\u65B9\u5F0F\u662F\u6D4F\u89C8\u5668\u6216 NodeJS \u811A\u672C\u8BBF\u95EE\u4E00\u4E2A\u5168\u5C40\u5BF9\u8C61\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> global <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token string">&#39;return this&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>global <span class="token operator">===</span> window<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; true</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">===</span> window<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; false</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u6784\u9020\u51FD\u6570\u4E2D\u7ED9\u5BF9\u8C61\u6DFB\u52A0\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u51FD\u6570\u4E2D\u7ED9\u5BF9\u8C61\u6DFB\u52A0\u65B9\u6CD5" aria-hidden="true">#</a> \u6784\u9020\u51FD\u6570\u4E2D\u7ED9\u5BF9\u8C61\u6DFB\u52A0\u65B9\u6CD5</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">calculate</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

calculate<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sum</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5728 JavaScript \u4E2D\u7684\u6BCF\u4E2A\u5BF9\u8C61\u90FD\u6709 <code>prototype</code> \u5C5E\u6027\uFF0CJavaScript \u4E2D\u5BF9\u8C61\u7684 <code>prototype</code> \u5C5E\u6027\u7684\u89E3\u91CA\u662F\uFF1A\u8FD4\u56DE\u5BF9\u8C61\u7C7B\u578B\u539F\u578B\u7684\u5F15\u7528\u3002\u6BD4\u5982\u4E0A\u9762\u7684\u4EE3\u7801\uFF0C\u5728 <code>calculate</code> \u7684\u51FD\u6570\u4E0A\u7684\u539F\u59CB\u5BF9\u8C61\u6DFB\u52A0\u4E86\u4E00\u4E2A <code>sum</code> \u65B9\u6CD5\uFF0C\u5C06\u5728\u6784\u9020\u51FD\u6570\u4E2D\u7528\u5230\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> calc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">calculate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
calc<span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="\u81EA\u6267\u884C\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u81EA\u6267\u884C\u51FD\u6570" aria-hidden="true">#</a> \u81EA\u6267\u884C\u51FD\u6570</h2><p>JavaScrip t \u4E2D\u81EA\u6267\u884C\u51FD\u6570\u6709\u51E0\u79CD\u4E0D\u540C\u5199\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u65B9\u6CD5\u4E00:\u6700\u524D\u6700\u540E\u52A0\u62EC\u53F7</span>
<span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u65B9\u6CD5\u4E8C\uFF1Afunction\u524D\u9762\u52A0\u8FD0\u7B97\u7B26\uFF0C\u6700\u5E38\u89C1\u7684\u662F!\u4E0Evoid</span>
<span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u8FD9\u79CD\u81EA\u6267\u884C\u51FD\u6570\u8868\u8FBE\u5F0F\uFF0C\u4E3B\u8981\u7528\u4E8E\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u4F5C\u7528\u57DF\uFF0C\u5728\u6B64\u4F5C\u7528\u57DF\u5185\u58F0\u660E\u7684\u53D8\u91CF\u4E0D\u4F1A\u548C\u5176\u5B83\u4F5C\u7528\u57DF\u5185\u7684\u53D8\u91CF\u51B2\u7A81\u6216\u6DF7\u6DC6\uFF0C\u5927\u591A\u662F\u4EE5\u533F\u540D\u51FD\u6570\u65B9\u5F0F\u5B58\u5728\uFF0C\u4E14\u7ACB\u5373\u81EA\u52A8\u6267\u884C\u3002\u4E5F\u7B97\u662F\u51FD\u6570\u8868\u8FBE\u5F0F\u3002</p><p>\u867D\u7136\u4E0A\u9762\u7F57\u5217\u4E86\u51E0\u79CD\u5E38\u89C1\u521B\u5EFA\u51FD\u6570\u7684\u65B9\u6CD5\uFF0C\u4F46\u5728 ECMAScript \u4E2D\uFF0C\u521B\u5EFA\u51FD\u6570\u7684\u6700\u5E38\u7528\u65B9\u6CD5\u662F\u51FD\u6570\u8868\u8FBE\u5F0F\u548C\u51FD\u6570\u58F0\u660E\u3002\u521D\u5B66\u8005\u5BF9\u8FD9\u4E24\u8005\u90FD\u662F\u6BD4\u8F83\u6655\u7684\uFF0C\u6BD4\u5982\u6211\u81EA\u5DF1\uFF0C\u5F88\u591A\u65F6\u5019\u5C31\u50BB\u50BB\u7684\u5206\u4E0D\u6E05\u695A\u4EC0\u4E48\u662F\u51FD\u6570\u8868\u8FBE\u5F0F\uFF0C\u4EC0\u4E48\u53C8\u662F\u51FD\u6570\u58F0\u660E\uFF1F\u4E3A\u4E86\u6574\u6E05\u695A\uFF0C\u6211\u770B\u4E66\u548C\u67E5\u8D44\u6599\u5F97\u77E5\uFF0C\u5982\u679C\u4E0D\u58F0\u660E\u51FD\u6570\u540D\u79F0\uFF0C\u5B83\u80AF\u5B9A\u662F\u51FD\u6570\u8868\u8FBE\u5F0F\uFF0C\u53EF\u5982\u679C\u58F0\u660E\u4E86\u51FD\u6570\u540D\u79F0\u7684\u8BDD\uFF0C\u5982\u4F55\u5224\u65AD\u662F\u51FD\u6570\u58F0\u660E\u8FD8\u662F\u51FD\u6570\u8868\u8FBE\u5F0F\uFF1F</p><p>JavaScript \u901A\u8FC7\u4E0A\u4E0B\u6587\u79CB\u533A\u5206\u4E24\u8005\uFF0C\u5982\u679C <code>function foo() {}</code> \u662F\u4F5C\u4E3A\u8D4B\u503C\u8868\u8FBE\u5F0F\u7684\u4E00\u90E8\u5206\u7684\u8BDD\uFF0C\u90A3\u5B83\u5C31\u662F\u4E00\u4E2A\u51FD\u6570\u8868\u8FBE\u5F0F\uFF1B\u5982\u679C <code>function foo() {}</code> \u88AB\u5305\u542B\u5728\u4E00\u4E2A\u51FD\u6570\u4F53\u5185\u6216\u8005\u4F4D\u4E8E\u7A0B\u5E8F\u7684\u6700\u9876\u90E8\u7684\u8BDD\uFF0C\u90A3\u5B83\u5C31\u662F\u4E00\u4E2A\u51FD\u6570\u58F0\u660E\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u51FD\u6570\u58F0\u660E</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// \u5B83\u662F\u7A0B\u5E8F\u7684\u4E00\u90E8\u5206</span>

<span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// \u5B83\u662F\u51FD\u6570\u4F53\u7684\u4E00\u90E8\u5206</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u51FD\u6570\u8868\u8FBE\u5F0F</span>
<span class="token keyword">var</span> <span class="token function-variable function">bar</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// \u5B83\u662F\u8D4B\u503C\u8868\u8FBE\u5F0F\u7684\u4E00\u90E8\u5206</span>
<span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5B83\u662Fnew\u8868\u8FBE\u5F0F // \u5B83\u5305\u542B\u5728\u5206\u7EC4\u64CD\u4F5C\u7B26\u5185</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,77);function g(v,y){const p=t("ExternalLinkIcon");return e(),o(u,null,[r,s("p",null,[k,s("a",b,[d,c(p)]),m]),f],64)}var j=l(i,[["render",g]]);export{j as default};
