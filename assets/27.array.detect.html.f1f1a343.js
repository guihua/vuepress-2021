import{d as n}from"./app.147292e0.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u6570\u7EC4\u68C0\u6D4B" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u68C0\u6D4B" aria-hidden="true">#</a> \u6570\u7EC4\u68C0\u6D4B</h1><p>\u5BF9 JavaScript \u4E2D\u6570\u636E\u7C7B\u578B(<code>Function</code>\u3001<code>String</code>\u3001<code>Number</code>\u3001<code>Undefined</code>\u3001<code>Boolean</code> \u548C <code>Object</code>)\u505A\u5224\u65AD\uFF0C\u5E38\u7528 <code>typeof</code> \u64CD\u4F5C\u7B26\u3002</p><h2 id="typeof-\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#typeof-\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> typeof \u64CD\u4F5C\u7B26</h2><p><code>typeof</code> \u53EF\u4EE5\u89E3\u51B3\u5927\u90E8\u5206\u6570\u636E\u7C7B\u578B\u7684\u68C0\u6D4B\uFF0C\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// function</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// string</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// number</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// boolean</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// number</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token operator">!</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//boolean</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token punctuation">{</span>name<span class="token operator">:</span><span class="token string">&quot;11&quot;</span><span class="token punctuation">,</span>age<span class="token operator">:</span> <span class="token string">&quot;22&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// object</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token punctuation">[</span><span class="token string">&quot;11&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;22&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// object</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// object</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u901A\u8FC7\u4E0A\u9762\u7684\u793A\u4F8B\uFF0C\u6211\u4EEC\u53D1\u73B0 <code>typeof {name:&quot;11&quot;,age: &quot;22&quot;}</code> \u548C <code>typeof [&quot;11&quot;,&quot;22&quot;]</code> \u8FD4\u56DE\u7684\u90FD\u662F <code>object</code>\uFF0C\u7531\u6B64\u8BC1\u660E <code>typeof</code> \u6CA1\u529E\u6CD5\u5BF9\u6570\u7EC4\u8FDB\u884C\u68C0\u6D4B\u3002</p><p>\u90A3\u4E48\u8FD9\u91CC\u5F15\u51FA\u4E00\u4E2A\u95EE\u9898\uFF0C\u5982\u4F55\u5224\u65AD\u6570\u636E\u662F\u4E2A\u6570\u7EC4\u7C7B\u578B\uFF1F</p><p>\u867D\u7136 <code>typeof</code> \u64CD\u4F5C\u7B26\u65E0\u6CD5\u68C0\u6D4B\u6570\u7EC4\uFF0C\u4F46\u4E8B\u5B9E\u4E0A\u68C0\u6D4B\u6570\u7EC4\u65B9\u6CD5\u6709\u5F88\u591A\u79CD\u3002</p><h2 id="_1-ecmascript-5-\u7684-isarray-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_1-ecmascript-5-\u7684-isarray-\u51FD\u6570" aria-hidden="true">#</a> 1.ECMAScript 5 \u7684 isArray \u51FD\u6570</h2><p>ECMAScript 5 \u5C06 <code>Array.isArray()</code> \u5F15\u5165 JavaScript\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isArray</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;11&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;22&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//\u521B\u5EFA\u4E00\u4E2A\u6570\u7EC4</span>
<span class="token function">isArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u8BE5\u65B9\u6CD5\u4E0D\u652F\u6301 IE8 \u4E4B\u524D\u7684\u6D4F\u89C8\u5668\u7248\u672C\u3002</p><h2 id="_2-\u5BF9\u8C61\u81EA\u8EAB\u7684-constructor-\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#_2-\u5BF9\u8C61\u81EA\u8EAB\u7684-constructor-\u5C5E\u6027" aria-hidden="true">#</a> 2.\u5BF9\u8C61\u81EA\u8EAB\u7684 constructor \u5C5E\u6027</h2><p><code>constructor</code> \u5C5E\u6027\u8FD4\u56DE\u4E00\u4E2A\u6307\u5411\u521B\u5EFA\u4E86\u8BE5\u5BF9\u8C61\u539F\u578B\u7684\u51FD\u6570\u5F15\u7528\uFF0C\u4F7F\u7528\u8BE5\u5C5E\u6027\u4E5F\u53EF\u4EE5\u68C0\u6D4B\u6570\u7EC4\u7C7B\u578B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isArray</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> obj <span class="token operator">&amp;&amp;</span> obj<span class="token punctuation">.</span>constructor <span class="token operator">===</span> Array<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_3-instanceof-\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#_3-instanceof-\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> 3.instanceof \u64CD\u4F5C\u7B26</h2><p><code>instanceof</code> \u64CD\u4F5C\u7B26\u53EF\u4EE5\u7528\u6765\u5224\u65AD\u67D0\u4E2A\u6784\u9020\u51FD\u6570\u7684 <code>prototype</code> \u5C5E\u6027\u662F\u5426\u5B58\u5728\u53E6\u5916\u4E00\u4E2A\u8981\u68C0\u6D4B\u5BF9\u8C61\u7684\u539F\u578B\u94FE\u4E0A\uFF0C\u4E5F\u5C31\u662F\u5224\u65AD <code>instanceof</code> \u524D\u9762\u7684\u5BF9\u8C61\u662F\u5426\u662F\u540E\u9762\u7684\u7C7B\u6216\u5BF9\u8C61\u7684\u5B9E\u4F8B\u3002</p><p><code>a instanceof b</code>\uFF0C\u5982\u679C\u8FD4\u56DE <code>true</code>\uFF0C\u8868\u793A <code>a</code> \u662F <code>b</code> \u7684\u4E00\u4E2A\u5B9E\u4F8B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;11&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;22&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="\u8DE8-frame-\u5B9E\u4F8B\u5316\u5BF9\u8C61\u5E26\u6765\u7684\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u8DE8-frame-\u5B9E\u4F8B\u5316\u5BF9\u8C61\u5E26\u6765\u7684\u95EE\u9898" aria-hidden="true">#</a> \u8DE8 frame \u5B9E\u4F8B\u5316\u5BF9\u8C61\u5E26\u6765\u7684\u95EE\u9898</h3><p><code>constructor</code> \u548C <code>instanceof</code> \u8C8C\u4F3C\u5F88\u597D\u7684\u4E24\u4E2A\u68C0\u6D4B\u6570\u7EC4\u7684\u65B9\u6CD5\uFF0C\u4F46\u5B9E\u9645\u4E0A\u8FD8\u662F\u6709\u4E9B\u6F0F\u6D1E\u7684\u3002</p><p>\u5F53\u4F60\u5728\u591A\u4E2A <code>frame</code> \u4E2D\u56DE\u6765\u8DF3\u7684\u65F6\u5019\uFF0C\u8FD9\u4E24\u79CD\u65B9\u6CD5\u5C31\u60E8\u4E86\u3002\u7531\u4E8E\u6BCF\u4E00\u4E2A <code>frame</code> \u90FD\u6709\u81EA\u5DF1\u7684\u4E00\u5957\u6267\u884C\u73AF\u5883\uFF0C\u8DE8 <code>frame</code> \u5B9E\u4F8B\u5316\u7684\u5BF9\u8C61\u5F7C\u6B64\u5E76\u4E0D\u5171\u4EAB\u539F\u578B\u94FE\uFF0C\u901A\u8FC7 <code>instanceof</code> \u64CD\u4F5C\u7B26\u548C <code>constructor</code> \u5C5E\u6027\u68C0\u6D4B\u7684\u65B9\u6CD5\u81EA\u7136\u4F1A\u5931\u8D25\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u521B\u5EFAiframe\u5E76\u6DFB\u52A0\u5230DOM\u4E2D</span>
<span class="token keyword">const</span> iframe <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;iframe&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>iframe<span class="token punctuation">)</span><span class="token punctuation">;</span>

otherArray <span class="token operator">=</span> window<span class="token punctuation">.</span>frames<span class="token punctuation">[</span>window<span class="token punctuation">.</span>frames<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Array<span class="token punctuation">;</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">otherArray</span><span class="token punctuation">(</span><span class="token string">&quot;11&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;22&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u58F0\u660E\u6570\u7EC4</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>constructor <span class="token operator">===</span> Array<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// false</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="_4-\u5BF9\u8C61\u539F\u751F-tostring-\u68C0\u6D4B" tabindex="-1"><a class="header-anchor" href="#_4-\u5BF9\u8C61\u539F\u751F-tostring-\u68C0\u6D4B" aria-hidden="true">#</a> 4.\u5BF9\u8C61\u539F\u751F toString \u68C0\u6D4B</h2><p><code>Object.prototype.toString</code> \u7684\u884C\u4E3A\uFF1A\u9996\u5148\uFF0C\u53D6\u5F97\u5BF9\u8C61\u7684\u4E00\u4E2A\u5185\u90E8\u5C5E\u6027 <code>[[Class]]</code>\uFF0C\u7136\u540E\u4F9D\u636E\u8FD9\u4E2A\u5C5E\u6027\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u7C7B\u4F3C\u4E8E&quot;<code>[object Array]</code>&quot;\u7684\u5B57\u7B26\u4E32\u4F5C\u4E3A\u7ED3\u679C(\u770B\u8FC7 ECMA \u6807\u51C6\u7684\u5E94\u8BE5\u90FD\u77E5\u9053\uFF0C<code>[[]]</code> \u7528\u6765\u8868\u793A\u8BED\u8A00\u5185\u90E8\u7528\u5230\u7684\u3001\u5916\u90E8\u4E0D\u53EF\u76F4\u63A5\u8BBF\u95EE\u7684\u5C5E\u6027\uFF0C\u79F0\u4E3A\u201C\u5185\u90E8\u5C5E\u6027\u201D)\u3002\u5229\u7528\u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u518D\u914D\u5408 <code>call</code>\uFF0C\u6211\u4EEC\u53EF\u4EE5\u53D6\u5F97\u4EFB\u4F55\u5BF9\u8C61\u7684\u5185\u90E8\u5C5E\u6027 <code>[[Class]]</code>\uFF0C\u7136\u540E\u628A\u7C7B\u578B\u68C0\u6D4B\u8F6C\u5316\u4E3A\u5B57\u7B26\u4E32\u6BD4\u8F83\uFF0C\u4EE5\u8FBE\u5230\u6211\u4EEC\u7684\u76EE\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isArray</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;[object Array]&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;11&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;22&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>call</code> \u6539\u53D8 <code>toString</code> \u7684 <code>this</code> \u5F15\u7528\u4E3A\u5F85\u68C0\u6D4B\u7684\u5BF9\u8C61\uFF0C\u8FD4\u56DE\u6B64\u5BF9\u8C61\u7684\u5B57\u7B26\u4E32\u8868\u793A\uFF0C\u7136\u540E\u5BF9\u6BD4\u6B64\u5B57\u7B26\u4E32\u662F\u5426\u662F <code>[object Array]</code>\uFF0C\u4EE5\u5224\u65AD\u5176\u662F\u5426\u662F <code>Array</code> \u7684\u5B9E\u4F8B\u3002</p><h2 id="_5-\u5176\u4ED6\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_5-\u5176\u4ED6\u65B9\u6CD5" aria-hidden="true">#</a> 5.\u5176\u4ED6\u65B9\u6CD5</h2><p>\u9664\u4E86\u4E0A\u9762\u7684\u4ECB\u7ECD\u7684\u4E00\u4E9B\u65B9\u6CD5\u4E4B\u5916\uFF0C\u8FD8\u6709\uFF1A</p><p>\u65B9\u6CD51\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">isArray</span><span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token keyword">typeof</span> arg <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span>
    <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span> <span class="token string">&quot;join&quot;</span> <span class="token keyword">in</span> arg <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> arg<span class="token punctuation">.</span>join <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token punctuation">)</span>
    <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span> <span class="token string">&quot;length&quot;</span> <span class="token keyword">in</span> arg <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> arg<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">{</span>join<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token function-variable function">join</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u65B9\u6CD52\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isArray</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">subj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    subj <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>subj<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>er<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">isArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u65B9\u6CD53\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">is_array</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> value <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span>
    <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> value<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span>
    <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> value<span class="token punctuation">.</span>splice <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span>
    <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">propertyIsEnumerable</span><span class="token punctuation">(</span><span class="token string">&#39;length&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">is_array</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u65B9\u6CD54\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> isArray <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span>isArray<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Array<span class="token punctuation">.</span>isArray<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> objectToStringFn <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">;</span>
  <span class="token keyword">const</span> arrayToStringResult <span class="token operator">=</span> <span class="token function">objectToStringFn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">subject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">objectToStringFn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>subject<span class="token punctuation">)</span> <span class="token operator">===</span> arrayToStringResult<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">isArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,37);function t(o,e){return p}var l=s(a,[["render",t]]);export{l as default};
