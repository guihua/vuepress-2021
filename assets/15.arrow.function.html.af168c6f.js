import{d as n}from"./app.147292e0.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u7BAD\u5934\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u7BAD\u5934\u51FD\u6570" aria-hidden="true">#</a> \u7BAD\u5934\u51FD\u6570</h1><h2 id="\u7BAD\u5934\u51FD\u6570\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7BAD\u5934\u51FD\u6570\u8BED\u6CD5" aria-hidden="true">#</a> \u7BAD\u5934\u51FD\u6570\u8BED\u6CD5</h2><p>\u5728 ES5 \u4E2D\u6211\u4EEC\u662F\u8FD9\u6837\u5199\u51FD\u6570\uFF0C\u6BD4\u5982\u4E00\u4E2A\u6C42\u548C\u7684\u51FD\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">sum</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4F7F\u7528\u7BAD\u5934 <code>=&gt;</code> \u6211\u4EEC\u53EF\u4EE5\u5206\u4E24\u6B65\u5B9E\u73B0\u540C\u6837\u7684\u51FD\u6570\u529F\u80FD\u3002</p><p>\u9996\u5148\u4F7F\u7528 <code>=&gt;</code> \u6765\u66FF\u4EE3\u5173\u952E\u8BCD <code>function</code>\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">sum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5982\u679C\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u662F\u4E00\u4E2A\u8868\u8FBE\u5F0F\u548C\u51FD\u6570\u4F53\u6CA1\u6709\u526F\u4F5C\u7528\u7684\u8BDD\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7701\u7565\u62EC\u53F7 <code>{}</code> \u548C <code>return</code> \u5173\u952E\u8BCD\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">sum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u4E0A\u9762\u770B\u5230\u7684\u662F\u5C31\u662F ES6 \u4E2D\u7684\u7BAD\u5934\u51FD\u6570\u7684\u4F7F\u7528\u8BED\u6CD5\u3002\u4E8B\u5B9E\u4E0A\uFF0CES6 \u7684\u7BAD\u5934\u51FD\u6570\u6709\u56DB\u79CD\u4F7F\u7528\u8BED\u6CD5\u3002</p><h3 id="\u5355\u4E00\u53C2\u6570\u7684\u5355\u884C\u7BAD\u5934\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u5355\u4E00\u53C2\u6570\u7684\u5355\u884C\u7BAD\u5934\u51FD\u6570" aria-hidden="true">#</a> \u5355\u4E00\u53C2\u6570\u7684\u5355\u884C\u7BAD\u5934\u51FD\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token parameter">foo</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>foo<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> World</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u8FD9\u4E2A\u7BAD\u5934\u51FD\u6570\u5C31\u53EA\u6709\u4E00\u4E2A\u53C2\u6570 <code>foo</code>\uFF0C\u5E76\u4E14\u8FD8\u7701\u7565\u4E86\u5927\u62EC\u53F7 <code>{}</code> \u548C <code>return</code> \u5173\u952E\u8BCD\u3002\u6211\u4EEC\u53EF\u4EE5\u8FD9\u6837\u8C03\u7528\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">fn</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Hello World</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u5176\u5B9E\u4E0A\u9762\u7684\u51FD\u6570\u6362\u6210 ES5 \u6765\u5199\u5C31\u662F\u8FD9\u6837\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">foo</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> foo <span class="token operator">+</span> <span class="token string">&#39; World&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">fn</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Hello World</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u8FD9\u662F\u7BAD\u5934\u51FD\u6570\u6700\u7B80\u6D01\u7684\u5F62\u5F0F\uFF0C\u5E38\u7528\u4E8E\u4F5C\u7528\u7B80\u5355\u7684\u5904\u7406\u51FD\u6570\uFF0C\u6BD4\u5982\u8FC7\u6EE4\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ES5</span>
<span class="token keyword">var</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;def&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ghij&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
array <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> item<span class="token punctuation">.</span>length <span class="token operator">&gt;=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ES6</span>
<span class="token keyword">let</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;def&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ghij&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
array <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>length <span class="token operator">&gt;=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;bc&quot;, &quot;def&quot;, &quot;ghij&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="\u591A\u53C2\u6570\u7684\u5355\u884C\u7BAD\u5934\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u591A\u53C2\u6570\u7684\u5355\u884C\u7BAD\u5934\u51FD\u6570" aria-hidden="true">#</a> \u591A\u53C2\u6570\u7684\u5355\u884C\u7BAD\u5934\u51FD\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">foo<span class="token punctuation">,</span> bar</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> foo <span class="token operator">+</span> bar<span class="token punctuation">;</span>

<span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5728\u5927\u591A\u6570\u60C5\u51B5\u4E0B\uFF0C\u51FD\u6570\u90FD\u4E0D\u4F1A\u53EA\u6709\u4E00\u4E2A\u53C2\u6570\u4F20\u5165\uFF0C\u5728\u7BAD\u5934\u51FD\u6570\u4E2D\uFF0C\u591A\u53C2\u6570\u7684\u8BED\u6CD5\u8DDF\u666E\u901A\u51FD\u6570\u4E00\u6837\uFF0C\u4EE5\u62EC\u53F7\u6765\u5305\u88F9\u53C2\u6570\u5217\u3002\u4E0A\u9762\u7684\u51FD\u6570 <code>fn</code> \u5BF9\u5E94\u7684 ES5 \u5C31\u50CF\u4E0B\u9762\u8FD9\u6837\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ES5</span>
<span class="token keyword">var</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">foo<span class="token punctuation">,</span> bar</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> foo <span class="token operator">+</span> bar<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u8FD9\u79CD\u5F62\u5F0F\u5E38\u89C1\u4E8E\u6570\u7EC4\u7684\u5904\u7406\uFF0C\u6BD4\u5982\u6392\u5E8F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ES5</span>
<span class="token keyword">var</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;def&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ghij&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
array <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ghij, def, bc, a</span>

<span class="token comment">// ES6</span>
<span class="token keyword">let</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;def&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ghij&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
array <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ghij, def, bc, a</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="\u591A\u884C\u7BAD\u5934\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u591A\u884C\u7BAD\u5934\u51FD\u6570" aria-hidden="true">#</a> \u591A\u884C\u7BAD\u5934\u51FD\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5355\u4E00\u53C2\u6570</span>
<span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token parameter">foo</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>foo<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> World</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u591A\u53C2\u6570</span>
<span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">foo<span class="token punctuation">,</span> bar</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> foo <span class="token operator">+</span> bar<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="\u65E0\u53C2\u6570\u7BAD\u5934\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u65E0\u53C2\u6570\u7BAD\u5934\u51FD\u6570" aria-hidden="true">#</a> \u65E0\u53C2\u6570\u7BAD\u5934\u51FD\u6570</h3><p>\u5982\u679C\u4E00\u4E2A\u7BAD\u5934\u51FD\u6570\u65E0\u53C2\u6570\u4F20\u5165\uFF0C\u5219\u9700\u8981\u7528\u4E00\u5BF9\u7A7A\u7684\u62EC\u53F7\u6765\u8868\u793A\u7A7A\u7684\u53C2\u6570\u5217\u8868\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u4E0A\u9762\u7684\u51FD\u6570fn\u76F8\u5F53\u4E8E ES5\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4E0A\u9762\u51E0\u79CD\u90FD\u662F\u7BAD\u5934\u51FD\u6570\u8868\u8FBE\u65B9\u5F0F\uFF0C\u5176\u6700\u5927\u7684\u597D\u5904\u4FBF\u662F\u7B80\u6D01\u660E\u4E86\u3002\u7701\u7565\u4E86 <code>function</code> \u5173\u952E\u8BCD\uFF0C\u800C\u662F\u4F7F\u7528 <code>=&gt;</code> \u4EE3\u66FF\u3002\u76F8\u5BF9\u4E8E\u4F20\u7EDF\u7684 <code>function</code> \u8BED\u53E5\uFF0C\u7BAD\u5934\u51FD\u6570\u5728\u7B80\u5355\u7684\u51FD\u6570\u4F7F\u7528\u4E2D\u66F4\u4E3A\u7B80\u6D01\u76F4\u89C2\u3002\u53E6\u5916\uFF0C\u7BAD\u5934\u51FD\u6570\u8BED\u8A00\u7B80\u6D01\u7684\u7279\u70B9\u4F7F\u5176\u7279\u522B\u9002\u5408\u7528\u4E8E\u5355\u884C\u56DE\u8C03\u51FD\u6570\u7684\u5B9A\u4E49\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ES5</span>
<span class="token keyword">var</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Will&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Jack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Peter&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Steve&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Hugo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Mike&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> newSet <span class="token operator">=</span> names<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        id<span class="token operator">:</span> index<span class="token punctuation">,</span>
        name<span class="token operator">:</span> name
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">man</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> man<span class="token punctuation">.</span>id <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">man</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>man<span class="token punctuation">.</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newSet<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;Will&quot;, &quot;Peter&quot;, &quot;John&quot;, &quot;Mike&quot;]</span>

<span class="token comment">// ES6</span>
<span class="token keyword">const</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Will&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Jack&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Peter&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Steve&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Hugo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Mike&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> newSet <span class="token operator">=</span> names
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
        id<span class="token operator">:</span> index<span class="token punctuation">,</span>
        name<span class="token operator">:</span> name
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">man</span> <span class="token operator">=&gt;</span> man<span class="token punctuation">.</span>id <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">man</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>man<span class="token punctuation">.</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newSet<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;Will&quot;, &quot;Peter&quot;, &quot;John&quot;, &quot;Mike&quot;]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>\u5728 ESMAScript \u8FD9\u79CD\u540C\u65F6\u5177\u6709\u51FD\u6570\u5F0F\u7F16\u7A0B\u548C\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\u7279\u70B9\u7684\u8BED\u8A00\u4E2D\uFF0C\u7BAD\u5934\u51FD\u6570\u53EF\u4EE5\u8BA9\u4EE3\u7801\u5728\u7F16\u5199\u4E0A\u53D8\u5F97\u975E\u5E38\u76F4\u89C2\u548C\u6613\u61C2\uFF1A</p><ul><li>\u5C06\u539F\u672C\u7684\u7531\u540D\u5B57\u7EC4\u6210\u7684\u6570\u7EC4\u8F6C\u6362\u4E3A\u4E00\u4E2A\u683C\u5F0F\u4E3A <code>{id, name}</code> \u7684\u5BF9\u8C61\uFF0C<code>id</code> \u5219\u4E3A\u6BCF\u4E2A\u540D\u5B57\u5728\u539F\u6570\u7EC4\u4E2D\u7684\u4F4D\u7F6E</li><li>\u5254\u9664\u5176\u4E2D <code>id</code> \u4E3A\u5947\u6570\u7684\u5143\u7D20\uFF0C\u53EA\u4FDD\u7559 <code>id</code> \u4E3A\u5076\u6570\u7684\u5143\u7D20</li><li>\u5C06\u5269\u4E0B\u7684\u5143\u7D20\u8F6C\u6362\u4E3A\u4E00\u4E2A\u5305\u542B\u5F53\u524D\u5143\u7D20\u4E2D\u539F\u540D\u5B57\u7684\u5355\u5143\u6570\u7EC4\uFF0C\u4EE5\u65B9\u4FBF\u4E0B\u4E00\u6B65\u7684\u5904\u7406</li><li>\u4E0D\u65AD\u5408\u5E76\u76F8\u90BB\u7684\u4E24\u4E2A\u6570\u7EC4\uFF0C\u6700\u540E\u5F97\u5230\u7684\u4E00\u4E2A\u6570\u7EC4\uFF0C\u4FBF\u662F\u6211\u4EEC\u9700\u8981\u5F97\u5230\u7684\u76EE\u6807\u503C</li></ul><h2 id="\u4E0A\u4E0B\u6587\u7ED1\u5B9A" tabindex="-1"><a class="header-anchor" href="#\u4E0A\u4E0B\u6587\u7ED1\u5B9A" aria-hidden="true">#</a> \u4E0A\u4E0B\u6587\u7ED1\u5B9A</h2><p><strong>\u7BAD\u5934\u51FD\u6570\u4F1A\u6355\u83B7\u5176\u6240\u5728\u4E0A\u4E0B\u6587\u7684 <code>this</code> \u4F5C\u4E3A\u81EA\u5DF1\u7684 <code>this</code>\uFF0C\u4E5F\u5C31\u662F\u8BF4\uFF0C\u7BAD\u5934\u51FD\u6570\u5185\u90E8\u4E0E\u5176\u5916\u90E8\u7684 <code>this</code> \u662F\u4FDD\u6301\u4E00\u81F4\u7684\u3002</strong></p><p>\u54B1\u4EEC\u901A\u8FC7\u4E00\u6BB5 ES5 \u548C ES6 \u7684\u4EE3\u7801\u5BF9\u6BD4\uFF0C\u4F1A\u66F4\u6613\u7406\u89E3\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ES6</span>
<span class="token keyword">var</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> <span class="token function-variable function">subFoo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>parms <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// ES5</span>
<span class="token keyword">var</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> _this <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> <span class="token function-variable function">subFoo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">subFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        _this<span class="token punctuation">.</span>parms <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u8003\u8651\u5230 <code>this</code> \u662F\u8BCD\u6CD5\u5C42\u9762\u4E0A\u7684\uFF0C\u4E25\u683C\u6A21\u5F0F\u4E2D\u4E0E <code>this</code> \u76F8\u5173\u7684\u89C4\u5219\u90FD\u5C06\u88AB\u5FFD\u7565\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> window<span class="token punctuation">;</span> <span class="token comment">// \u6216\u5168\u5C40\u5BF9\u8C61</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u9664\u6B64\u4E4B\u5916\uFF0C\u7531\u4E8E <code>this</code> \u5DF2\u7ECF\u5728\u8BCD\u6CD5\u5C42\u9762\u5B8C\u6210\u4E86\u7ED1\u5B9A\uFF0C\u901A\u8FC7 <code>call()</code> \u6216 <code>apply()</code> \u65B9\u6CD5\u8C03\u7528\u4E00\u4E2A\u51FD\u6570\u65F6\uFF0C\u53EA\u662F\u4F20\u5165\u4E86\u53C2\u6570\u800C\u5DF2\uFF0C\u5BF9 <code>this</code> \u5E76\u6CA1\u6709\u4EC0\u4E48\u5F71\u54CD\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> adder <span class="token operator">=</span> <span class="token punctuation">{</span>
    base<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>

    <span class="token function-variable function">add</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token parameter">v</span> <span class="token operator">=&gt;</span> v <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>base<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">f</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token function-variable function">addThruCall</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token parameter">v</span> <span class="token operator">=&gt;</span> v <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>base<span class="token punctuation">;</span>
        <span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token punctuation">{</span>
            base<span class="token operator">:</span> <span class="token number">2</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token function">f</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>adder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8F93\u51FA 2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>adder<span class="token punctuation">.</span><span class="token function">addThruCall</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4ECD\u7136\u8F93\u51FA 2</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="\u4E0D\u7ED1\u5B9A\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u7ED1\u5B9A\u53C2\u6570" aria-hidden="true">#</a> \u4E0D\u7ED1\u5B9A\u53C2\u6570</h2><p>\u7BAD\u5934\u51FD\u6570\u4E0D\u4F1A\u5728\u5176\u5185\u90E8\u66B4\u9732\u51FA\u53C2\u6570\uFF1Aarguments.length\u3001arguments[0]\u548Cargumetns[1]\u7B49\u7B49\uFF0C\u90FD\u4E0D\u4F1A\u6307\u5411\u7BAD\u5934\u51FD\u6570\u7684arguments\uFF0C\u800C\u662F\u6307\u5411\u4E86\u7BAD\u5934\u51FD\u6570\u6240\u5728\u4F5C\u7528\u57DF\u7684\u4E00\u4E2A\u540D\u4E3Aarguments\u7684\u503C\uFF0C\u5982\u679C\u6CA1\u6709\u8FD9\u4E2A\u503C\u7684\u8BDD\uFF0C\u5C31\u662Fundefined\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arguments <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token function-variable function">arr</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> arguments<span class="token punctuation">;</span>

<span class="token function">arr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 42</span>

<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span>i<span class="token punctuation">;</span>
    <span class="token comment">// foo\u51FD\u6570\u7684\u95F4\u63A5\u53C2\u6570\u7ED1\u5B9A</span>
    <span class="token keyword">return</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u7BAD\u5934\u51FD\u6570\u6CA1\u6709\u81EA\u5DF1\u7684arguments\uFF0C\u4E0D\u8FC7\u5728\u5927\u591A\u6570\u60C5\u5F62\u4E0B\uFF0Crest\u53C2\u6570\u53EF\u4EE5\u7ED9\u51FA\u4E00\u4E2A\u89E3\u51B3\u65B9\u6848\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,48);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
