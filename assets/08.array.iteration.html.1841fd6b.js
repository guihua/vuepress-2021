import{d as n}from"./app.147292e0.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u6570\u7EC4\u8FED\u4EE3" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u8FED\u4EE3" aria-hidden="true">#</a> \u6570\u7EC4\u8FED\u4EE3</h1><p>\u4F7F\u7528\u6570\u7EC4\u603B\u662F\u4F1A\u78B0\u5230\u6570\u7EC4\u7684\u904D\u5386\uFF08\u8FED\u4EE3\uFF09\u64CD\u4F5C\u3002</p><p>\u8BF4\u5230\u8FED\u4EE3\uFF0C\u53EF\u80FD\u4F1A\u7ACB\u9A6C\u60F3\u8D77 <code>for</code> \u8BED\u53E5\u5BF9\u6570\u7EC4\u8FDB\u884C\u8FED\u4EE3\u3002\u6BD4\u5982\u9700\u8981\u8FED\u4EE3\u51FA\u4E0B\u9762\u6570\u7EC4 <code>peoples</code> \u5E74\u9F84(<code>age</code>)\u5927\u4E8E <code>30</code> \u7684\u4EBA\u540D(<code>name</code>)\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> peoples <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;Agraj&#39;</span><span class="token punctuation">,</span>
    gender<span class="token operator">:</span> <span class="token string">&#39;M&#39;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">29</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token punctuation">{</span>
      city<span class="token operator">:</span> <span class="token string">&#39;Delhi&#39;</span><span class="token punctuation">,</span>
      pincode<span class="token operator">:</span> <span class="token string">&#39;110064&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;Mark&#39;</span><span class="token punctuation">,</span>
    gender<span class="token operator">:</span> <span class="token string">&#39;M&#39;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">35</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token punctuation">{</span>
      city<span class="token operator">:</span> <span class="token string">&#39;West Bengal&#39;</span><span class="token punctuation">,</span>
      pincode<span class="token operator">:</span> <span class="token string">&#39;220013&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;Lance&#39;</span><span class="token punctuation">,</span>
    gender<span class="token operator">:</span> <span class="token string">&#39;M&#39;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">39</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token punctuation">{</span>
      city<span class="token operator">:</span> <span class="token string">&#39;Chandigarh&#39;</span><span class="token punctuation">,</span>
      pincode<span class="token operator">:</span> <span class="token string">&#39;201201&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;Vikas&#39;</span><span class="token punctuation">,</span>
    gender<span class="token operator">:</span> <span class="token string">&#39;M&#39;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">21</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token punctuation">{</span>
      city<span class="token operator">:</span> <span class="token string">&#39;Noida&#39;</span><span class="token punctuation">,</span>
      pincode<span class="token operator">:</span> <span class="token string">&#39;201301&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;Kanika&#39;</span><span class="token punctuation">,</span>
    gender<span class="token operator">:</span> <span class="token string">&#39;F&#39;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">21</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token punctuation">{</span>
      city<span class="token operator">:</span> <span class="token string">&#39;Noida&#39;</span><span class="token punctuation">,</span>
      pincode<span class="token operator">:</span> <span class="token string">&#39;201301&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> peoples<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>peoples<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>age <span class="token operator">&gt;</span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>peoples<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> peoples<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div><p>\u8F93\u51FA\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Mark<span class="token operator">:</span> <span class="token number">35</span><span class="token punctuation">;</span>
Lance<span class="token operator">:</span> <span class="token number">39</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>ES5 \u4E3A\u6570\u7EC4\u5B9A\u4E49\u4E86\u4E94\u4E2A\u8FED\u4EE3\u65B9\u6CD5\uFF1A</p><ul><li><code>forEach()</code> - \u6CA1\u6709\u8FD4\u56DE\u503C\uFF0C\u53EA\u662F\u9488\u5BF9\u6BCF\u4E2A\u6570\u7EC4\u9879\u8C03\u7528\u6307\u5B9A\u7684\u51FD\u6570(<code>callbackfn</code>)</li><li><code>every()</code> - \u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C(<code>true</code> \u6216 <code>false</code>)\uFF0C\u5224\u65AD\u6BCF\u4E2A\u6570\u7EC4\u9879\u662F\u5426\u7B26\u5408\u6307\u5B9A\u51FD\u6570\u7684\u6761\u4EF6\uFF0C\u7B26\u5408\u4E3A <code>true</code>\uFF0C\u53CD\u4E4B\u4E3A <code>false</code></li><li><code>some()</code> - \u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C(<code>true</code> \u6216 <code>false</code>),\u5224\u65AD\u6BCF\u4E2A\u6570\u7EC4\u9879\u662F\u5426\u7B26\u5408\u6307\u5B9A\u51FD\u6570\u7684\u6761\u4EF6\uFF0C\u53EA\u8981\u6709\u4EFB\u4F55\u4E00\u9879\u8FD4\u56DE\u4E3A <code>true</code>\uFF0C\u5C31\u4F1A\u8FD4\u56DE <code>true</code></li><li><code>filter()</code> - \u6BCF\u4E2A\u6570\u7EC4\u9879\u8C03\u7528\u6307\u5B9A\u7684\u51FD\u6570\uFF0C\u6761\u4EF6\u4E3A <code>true</code> \u7684\u5C06\u8FD4\u5230\u4E00\u4E2A\u65B0\u6570\u7EC4\u4E2D</li><li><code>map()</code> - \u6BCF\u4E2A\u6570\u7EC4\u9879\u8C03\u7528\u6307\u5B9A\u7684\u51FD\u6570\uFF0C\u8FD4\u56DE\u6BCF\u6B21\u51FD\u6570\u8C03\u7528\u7684\u7ED3\u679C\u7EC4\u6210\u4E00\u4E2A\u65B0\u6570\u7EC4</li></ul><p>\u8FD9\u4E94\u4E2A\u6570\u7EC4\u8FED\u4EE3\u7684\u65B9\u6CD5\u4E2D\uFF0C\u5176\u4E2D <code>forEach()</code>\u3001<code>every()</code> \u548C <code>some()</code> \u65B9\u6CD5\u4E0D\u751F\u6210\u4E00\u4E2A\u65B0\u6570\u7EC4\uFF0C\u800C <code>filter()</code> \u548C <code>map()</code> \u65B9\u6CD5\u5C06\u4F1A\u751F\u6210\u4E00\u4E2A\u65B0\u6570\u7EC4\uFF08\u7B26\u5408\u6761\u4EF6\uFF09\u3002\u5E76\u4E14\u8FD9\u4E9B\u65B9\u6CD5\u90FD\u4F1A\u8C03\u7528\u6307\u5B9A\u7684\u51FD\u6570 <code>callbackfn</code>\u3002\u56DE\u8C03\u51FD\u6570 <code>callbackfn</code> \u8BED\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">callbackfn</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> index<span class="token punctuation">,</span> array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u53EF\u4EE5\u4F7F\u7528\u4E09\u4E2A\u53C2\u6570\u6765\u58F0\u660E\u56DE\u8C03\u51FD\u6570 <code>callbackfn</code>:</p><ul><li><code>value</code> - \u6570\u7EC4\u5143\u7D20\u7684\u503C</li><li><code>index</code> - \u6570\u7EC4\u5143\u7D20\u5728\u6570\u7EC4\u4E2D\u7684\u7D22\u5F15\u503C</li><li><code>array</code> - \u5305\u542B\u8BE5\u5143\u7D20\u7684\u6570\u7EC4\u5BF9\u8C61</li></ul><h2 id="_1-foreach-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-foreach-\u65B9\u6CD5" aria-hidden="true">#</a> 1. forEach() \u65B9\u6CD5</h2><p><code>forEach()</code> \u65B9\u6CD5\u8BA9\u6570\u7EC4\u7684\u6BCF\u4E00\u9879\u90FD\u6267\u884C\u4E00\u6B21\u7ED9\u5B9A\u7684\u51FD\u6570\u3002</p><p>\u8BED\u6CD5\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>array.forEach<span class="token punctuation">(</span>callbackfn<span class="token punctuation">[</span>, thisArg<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u53C2\u6570\uFF1A</p><table><thead><tr><th>\u53C2\u6570</th><th>\u8BF4\u660E</th></tr></thead><tbody><tr><td>array</td><td>\u5FC5\u9009\u3002\u4E00\u4E2A\u6570\u7EC4\u5BF9\u8C61</td></tr><tr><td>callbackfn</td><td>\u5FC5\u9009\u3002\u6700\u591A\u53EF\u4EE5\u63A5\u53D7\u4E09\u4E2A\u53C2\u6570\u7684\u51FD\u6570\u3002\u5BF9\u4E8E\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\uFF0CforEach \u90FD\u4F1A\u8C03\u7528 callbackfn \u51FD\u6570\u4E00\u6B21\u3002</td></tr><tr><td>thisArg</td><td>\u53EF\u9009\u3002 callbackfn \u51FD\u6570\u4E2D\u7684 this \u5173\u952E\u5B57\u53EF\u5F15\u7528\u7684\u5BF9\u8C61\u3002\u5982\u679C\u7701\u7565 thisArg\uFF0C\u5219 undefined \u5C06\u7528\u4F5C this \u503C\u3002</td></tr></tbody></table><p><code>forEach()</code> \u65B9\u6CD5\u6309\u5347\u5E8F\u4E3A\u6570\u7EC4\u4E2D\u542B\u6709\u6548\u503C\u7684\u6BCF\u4E00\u9879\u6267\u884C\u4E00\u6B21 <code>callbackfn</code> \u51FD\u6570\uFF0C\u90A3\u4E9B\u5DF2\u5220\u9664\u6216\u8005\u4ECE\u672A\u8D4B\u503C\u7684\u9879\u5C06\u88AB\u8DF3\u8FC7\uFF08\u4F46\u4E0D\u5305\u62EC\u54EA\u4E9B\u503C\u4E3A <code>undefined</code> \u7684\u9879\uFF09\u3002</p><p>\u7528 <code>forEach()</code> \u65B9\u6CD5\u6765\u5B9E\u73B0\u6570\u7EC4 <code>peoples</code> \u5E74\u9F84(<code>age</code>)\u5927\u4E8E <code>30</code> \u7684\u4EBA\u540D(<code>name</code>)\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>peoples<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">people</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>people<span class="token punctuation">.</span>age <span class="token operator">&gt;</span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>people<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> people<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>forEach()</code> \u65B9\u6CD5\u5185\u90E8\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">forEach</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>fun <span class="token comment">/*, thisp*/</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> len <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> fun <span class="token operator">!=</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> thisp <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> <span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">fun</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>thisp<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="_2-every-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-every-\u65B9\u6CD5" aria-hidden="true">#</a> 2. every() \u65B9\u6CD5</h2><p><code>every()</code> \u65B9\u6CD5\u6D4B\u8BD5\u6570\u7EC4\u7684\u6240\u6709\u5143\u7D20\u662F\u5426\u90FD\u7B26\u5408\u6307\u5B9A\u51FD\u6570\u7684\u6761\u4EF6\uFF0C\u53EA\u8981\u6709\u6709\u4E00\u4E2A\u5143\u7D20\u4E0D\u7B26\u5408\uFF0C\u8FD4\u56DE\u7684\u90FD\u4F1A\u662F <code>false</code>\u3002</p><p>\u8BED\u6CD5\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>array.every<span class="token punctuation">(</span>callbackfn<span class="token punctuation">[</span>, thisArg<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><code>every()</code> \u65B9\u6CD5\u4E3A\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u6267\u884C\u4E00\u6B21 <code>callbackfn</code> \u51FD\u6570\uFF0C\u76F4\u5230\u5B83\u627E\u5230\u4E00\u4E2A\u4F7F <code>callbackfn</code> \u8FD4\u56DE <code>false</code>\uFF08\u8868\u793A\u53EF\u8F6C\u6362\u4E3A\u5E03\u5C14\u503C <code>false</code> \u7684\u503C\uFF09\u7684\u5143\u7D20\u3002\u5982\u679C\u53D1\u73B0\u4E86\u4E00\u4E2A\u8FD9\u6837\u7684\u5143\u7D20\uFF0C<code>every()</code> \u65B9\u6CD5\u5C06\u4F1A\u7ACB\u5373\u8FD4\u56DE <code>false</code>\u3002\u5426\u5219\uFF0C<code>callbackfn</code> \u4E3A\u6BCF\u4E00\u4E2A\u5143\u7D20\u8FD4\u56DE <code>true</code>\uFF0C<code>every()</code> \u5C31\u4F1A\u8FD4\u56DE <code>true</code>\u3002<code>callbackfn</code> \u53EA\u4F1A\u4E3A\u90A3\u4E9B\u5DF2\u7ECF\u88AB\u8D4B\u503C\u7684\u7D22\u5F15\u8C03\u7528\uFF0C\u4E0D\u4F1A\u4E3A\u90A3\u4E9B\u88AB\u5220\u9664\u6216\u4ECE\u6765\u6CA1\u88AB\u8D4B\u503C\u7684\u7D22\u5F15\u8C03\u7528\u3002</p><p>\u63A5\u4E0A\u9762\u7684\u6570\u7EC4\uFF0C\u5982\u679C\u6BCF\u4E00\u4F4D\u7684\u5E74\u9F84\u90FD\u5927\u4E8E\u6216\u7B49\u4E8E <code>30</code>\uFF0C\u5C31\u4F1A\u8FD4\u56DE\u201C\u90FD\u5927\u4E8E\u6216\u7B49\u4E8E 30 \u5C81\u4E86\u201D\uFF0C\u53CD\u4E4B\u8FD4\u56DE\u201C\u4E0D\u662F\u6240\u6709\u4EBA\u90FD\u5927\u4E8E 30 \u5C81\u4E86\u201D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">bigAge</span><span class="token punctuation">(</span><span class="token parameter">ele<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> ele<span class="token punctuation">.</span>age <span class="token operator">&gt;=</span> <span class="token number">30</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> isBigPeople <span class="token operator">=</span> peoples<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span>bigAge<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>isBigPeople<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u90FD\u5927\u4E8E\u6216\u7B49\u4E8E30\u5C81\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u4E0D\u662F\u6240\u6709\u4EBA\u90FD\u5927\u4E8E30\u5C81\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Chrome \u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>// \u4E0D\u662F\u6240\u6709\u4EBA\u90FD\u5927\u4E8E30\u5C81\u4E86
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u5185\u90E8\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">every</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>fun <span class="token comment">/*, thisp*/</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> len <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> fun <span class="token operator">!=</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> thisp <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> <span class="token keyword">this</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">fun</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>thisp<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="_3-some-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-some-\u65B9\u6CD5" aria-hidden="true">#</a> 3. some() \u65B9\u6CD5</h2><p><code>some()</code> \u65B9\u6CD5\u548C <code>every()</code> \u65B9\u6CD5\u7C7B\u4F3C\uFF0C\u4E0D\u540C\u7684\u662F\uFF0C<code>some()</code> \u65B9\u6CD5\u5728\u8C03\u7528\u6307\u5B9A\u7684\u51FD\u6570 <code>callbackfn</code> \u6307\u5B9A\u7684\u6761\u4EF6\u7B26\u5408\u5C31\u4F1A\u8FD4\u56DE <code>true</code>\uFF0C\u4E0D\u7B26\u5408\u5219\u8FD4\u56DE <code>false</code>\u3002</p><p>\u8BED\u6CD5\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>array.some<span class="token punctuation">(</span>callbackfn<span class="token punctuation">[</span>, thisArg<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u53EA\u8981\u6570\u7EC4\u4E2D\u5E74\u9F84 <code>age</code> \u6709\u4E00\u4E2A\u5927\u4E8E\u6216\u7B49\u4E8E <code>30</code>\uFF0C\u5C31\u4F1A\u8FD4\u56DE\u201C\u6709\u90E8\u5206\u4EBA\u8FD8\u662F\u5E74\u7EAA\u5927\u4E86\u201D\uFF0C\u53CD\u4E4B\u8FD4\u56DE\u201C\u4F60\u4EEC\u90FD\u8FD8\u5F88\u5E74\u8F7B\u201D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">OldAge</span><span class="token punctuation">(</span><span class="token parameter">ele<span class="token punctuation">,</span> index<span class="token punctuation">,</span> array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> ele<span class="token punctuation">.</span>age <span class="token operator">&gt;=</span> <span class="token number">30</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> isOldPeople <span class="token operator">=</span> peoples<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span>OldAge<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>isOldPeople<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6709\u90E8\u5206\u4EBA\u8FD8\u662F\u5E74\u7EAA\u5927\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u4F60\u4EEC\u90FD\u8FD8\u5E74\u8F7B&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5185\u90E8\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">some</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>fun <span class="token comment">/*, thisp*/</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> len <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> fun <span class="token operator">!=</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> thisp <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> <span class="token keyword">this</span> <span class="token operator">&amp;&amp;</span> <span class="token function">fun</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>thisp<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="_4-map-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_4-map-\u65B9\u6CD5" aria-hidden="true">#</a> 4. map()\u65B9\u6CD5</h2><p><code>map()</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u7531\u539F\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u8C03\u7528\u4E00\u4E2A\u6307\u5B9A\u51FD\u6570 <code>callbackfn</code> \u540E\u7684\u8FD4\u56DE\u503C\u7EC4\u6210\u7684\u65B0\u6570\u7EC4\u3002\u5982\u679C\u7B26\u5408 <code>callbackfn</code> \u4F1A\u8FD4\u56DE\u7B26\u5408\u6761\u4EF6\u7684\u4E00\u4E2A\u503C\uFF0C\u5C06\u6240\u6709\u8FD4\u56DE\u7684\u503C\u518D\u521B\u5EFA\u4E00\u4E2A\u65B0\u6570\u7EC4\u3002</p><p>\u8BED\u6CD5\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>array.map<span class="token punctuation">(</span>callbackfn<span class="token punctuation">[</span>, thisArg<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><code>map()</code> \u65B9\u6CD5\u4F1A\u7ED9\u539F\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u90FD\u6309\u987A\u5E8F\u8C03\u7528\u4E00\u6B21 <code>callbackfn</code> \u51FD\u6570\u3002<code>callbackfn</code> \u6BCF\u6B21\u6267\u884C\u540E\u7684\u8FD4\u56DE\u503C\u7EC4\u5408\u8D77\u6765\u5F62\u6210\u4E00\u4E2A\u65B0\u6570\u7EC4\u3002 <code>callbackfn</code> \u51FD\u6570\u53EA\u4F1A\u5728\u6709\u503C\u7684\u7D22\u5F15\u4E0A\u88AB\u8C03\u7528\uFF1B\u90A3\u4E9B\u4ECE\u6765\u6CA1\u88AB\u8D4B\u8FC7\u503C\u6216\u8005\u4F7F\u7528 <code>delete</code> \u5220\u9664\u7684\u7D22\u5F15\u5219\u4E0D\u4F1A\u88AB\u8C03\u7528\u3002</p><p>\u4F7F\u7528 map()\u65B9\u6CD5\u904D\u5386\u6570\u7EC4 peoples\uFF0C\u5E76\u4E14\u8BA9 index \u5728\u4EE5\u524D\u7684 index \u589E\u52A0 1:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> usersDb <span class="token operator">=</span> peoples<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">user<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  user<span class="token punctuation">.</span>id <span class="token operator">=</span> index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> user<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span>usersDb<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5185\u90E8\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">map</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>fun <span class="token comment">/*, thisp*/</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> len <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> fun <span class="token operator">!=</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> thisp <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> <span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">fun</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>thisp<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="_5-filter-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_5-filter-\u65B9\u6CD5" aria-hidden="true">#</a> 5. filter() \u65B9\u6CD5</h2><p><code>filter()</code> \u65B9\u6CD5\u4F7F\u7528\u6307\u5B9A\u7684\u51FD\u6570 <code>callbackfn</code> \u6D4B\u8BD5\u6240\u6709\u5143\u7D20\uFF0C\u5E76\u521B\u5EFA\u4E00\u4E2A\u5305\u542B\u6240\u6709\u901A\u8FC7\u6D4B\u8BD5\u7684\u5143\u7D20\u7684\u65B0\u6570\u7EC4\u3002</p><p>\u8BED\u6CD5\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>array.filter<span class="token punctuation">(</span>callbackfn<span class="token punctuation">[</span>, thisArg<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><code>filter()</code> \u4E3A\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u8C03\u7528\u4E00\u6B21 <code>callbackfn</code> \u51FD\u6570\uFF0C\u5E76\u5229\u7528\u6240\u6709\u4F7F\u5F97 <code>callbackfn</code> \u8FD4\u56DE <code>true</code> \u6216\u7B49\u4EF7\u4E8E <code>true</code> \u7684\u503C\u7684\u5143\u7D20\u521B\u5EFA\u4E00\u4E2A\u65B0\u6570\u7EC4\u3002<code>callbackfn</code> \u53EA\u4F1A\u5728\u5DF2\u7ECF\u8D4B\u503C\u7684\u7D22\u5F15\u4E0A\u88AB\u8C03\u7528\uFF0C\u5BF9\u4E8E\u90A3\u4E9B\u5DF2\u7ECF\u88AB\u5220\u9664\u6216\u8005\u4ECE\u672A\u88AB\u8D4B\u503C\u7684\u7D22\u5F15\u4E0D\u4F1A\u88AB\u8C03\u7528\u3002\u90A3\u4E9B\u6CA1\u6709\u901A\u8FC7 <code>callbackfn</code> \u6D4B\u8BD5\u7684\u5143\u7D20\u4F1A\u88AB\u8DF3\u8FC7\uFF0C\u4E0D\u4F1A\u88AB\u5305\u542B\u5728\u65B0\u6570\u7EC4\u4E2D\u3002</p><p>\u904D\u5386\u51FA\u6570\u7EC4\u4E2D <code>gender</code> \u4E3A <code>M</code> \u7684\u76F8\u5173\u6570\u7EC4\u9879\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> guys <span class="token operator">=</span> peoples<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> user<span class="token punctuation">.</span>gender <span class="token operator">===</span> <span class="token string">&#39;M&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span>guys<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5185\u90E8\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">filter</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>fun <span class="token comment">/*, thisp*/</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> len <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> fun <span class="token operator">!=</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> thisp <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> <span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> val <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// in case fun mutates this</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">fun</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>thisp<span class="token punctuation">,</span> val<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>`,60);function e(t,o){return p}var u=s(a,[["render",e]]);export{u as default};
