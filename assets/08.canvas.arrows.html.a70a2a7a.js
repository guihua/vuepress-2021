import{r as t,o,c as e,a as n,e as a,F as c,d as l,b as p}from"./app.147292e0.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},k=l(`<h1 id="canvas-\u7ED8\u5236\u7BAD\u5934" tabindex="-1"><a class="header-anchor" href="#canvas-\u7ED8\u5236\u7BAD\u5934" aria-hidden="true">#</a> Canvas \u7ED8\u5236\u7BAD\u5934</h1><p>\u6838\u5FC3\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Draw arrow</span>
<span class="token keyword">function</span> <span class="token function">drawArrow</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> fromX<span class="token punctuation">,</span> fromY<span class="token punctuation">,</span> toX<span class="token punctuation">,</span> toY<span class="token punctuation">,</span> theta<span class="token punctuation">,</span> headlen<span class="token punctuation">,</span> width<span class="token punctuation">,</span> color</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  theta <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span>theta<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">?</span> theta <span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">;</span>
  headlen <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span>theta<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">?</span> headlen <span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">;</span>
  width <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">?</span> width <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
  color <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">&#39;color&#39;</span> <span class="token operator">?</span> color <span class="token operator">:</span> <span class="token string">&#39;#000&#39;</span><span class="token punctuation">;</span>

  <span class="token comment">// \u8BA1\u7B97\u5404\u89D2\u5EA6\u548C\u5BF9\u5E94\u7684P2,P3\u5750\u6807</span>
  <span class="token keyword">var</span> angle <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">atan2</span><span class="token punctuation">(</span>fromY <span class="token operator">-</span> toY<span class="token punctuation">,</span> fromX <span class="token operator">-</span> toX<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">180</span> <span class="token operator">/</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">,</span>
    angle1 <span class="token operator">=</span> <span class="token punctuation">(</span>angle <span class="token operator">+</span> theta<span class="token punctuation">)</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">180</span><span class="token punctuation">,</span>
    angle2 <span class="token operator">=</span> <span class="token punctuation">(</span>angle <span class="token operator">-</span> theta<span class="token punctuation">)</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">180</span><span class="token punctuation">,</span>
    topX <span class="token operator">=</span> headlen <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span>angle1<span class="token punctuation">)</span><span class="token punctuation">,</span>
    topY <span class="token operator">=</span> headlen <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>angle1<span class="token punctuation">)</span><span class="token punctuation">,</span>
    botX <span class="token operator">=</span> headlen <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span>angle2<span class="token punctuation">)</span><span class="token punctuation">,</span>
    botY <span class="token operator">=</span> headlen <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>angle2<span class="token punctuation">)</span><span class="token punctuation">;</span>


  ctx<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">var</span> arrowX <span class="token operator">=</span> fromX <span class="token operator">-</span> topX<span class="token punctuation">,</span>
    arrowY <span class="token operator">=</span> fromY <span class="token operator">-</span> topY<span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>arrowX<span class="token punctuation">,</span> arrowY<span class="token punctuation">)</span><span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>fromX<span class="token punctuation">,</span> fromY<span class="token punctuation">)</span><span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>toX<span class="token punctuation">,</span> toY<span class="token punctuation">)</span><span class="token punctuation">;</span>
  arrowX <span class="token operator">=</span> toX <span class="token operator">+</span> topX<span class="token punctuation">;</span>
  arrowY <span class="token operator">=</span> toY <span class="token operator">+</span> topY<span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>arrowX<span class="token punctuation">,</span> arrowY<span class="token punctuation">)</span><span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>toX<span class="token punctuation">,</span> toY<span class="token punctuation">)</span><span class="token punctuation">;</span>
  arrowX <span class="token operator">=</span> toX <span class="token operator">+</span> botX<span class="token punctuation">;</span>
  arrowY <span class="token operator">=</span> toY <span class="token operator">+</span> botY<span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>arrowX<span class="token punctuation">,</span> arrowY<span class="token punctuation">)</span><span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> color<span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> width<span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div>`,3),i={href:"https://jsfiddle.net/guihua/h474qf6n/",target:"_blank",rel:"noopener noreferrer"},b=p("Canvas \u7ED8\u5236\u7BAD\u5934"),m={href:"https://jsfiddle.net/guihua/eyk0a6s2/",target:"_blank",rel:"noopener noreferrer"},d=p("Canvas \u7ED8\u5236\u591A\u7BAD\u5934");function h(f,w){const s=t("ExternalLinkIcon");return o(),e(c,null,[k,n("p",null,[n("a",i,[b,a(s)])]),n("p",null,[n("a",m,[d,a(s)])])],64)}var x=r(u,[["render",h]]);export{x as default};
