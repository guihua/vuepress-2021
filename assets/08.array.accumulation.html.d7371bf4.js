import{d as n}from"./app.147292e0.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u6570\u7EC4\u7D2F\u52A0" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u7D2F\u52A0" aria-hidden="true">#</a> \u6570\u7EC4\u7D2F\u52A0</h1><p>\u6570\u7EC4\u9879\u7D2F\u52A0\u53EF\u4EE5\u7528 For \u5FAA\u73AF\u6216\u8005 While \u5FAA\u73AF\u6765\u5B9E\u73B0\u3002</p><p>For \u5FAA\u73AF\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">forLoop</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> sumResult <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      sumResult <span class="token operator">+=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> sumResult<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>While \u5FAA\u73AF\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">whileLoop</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> sumResult <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      sumResult <span class="token operator">+=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> sumResult<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5728 JavaScript \u4E2D\u63D0\u4F9B\u4E86\u4E24\u4E2A\u6570\u7EC4\u7684\u65B9\u6CD5 <code>reduce()</code> \u548C <code>reduceRight()</code>\uFF0C\u8FD9\u4E24\u4E2A\u6570\u7EC4\u4F1A\u8FED\u4EE3\u6570\u7EC4\u7684\u6240\u6709\u6570\u7EC4\u9879\uFF0C\u7136\u540E\u8FD4\u56DE\u4E00\u4E2A\u6700\u7EC8\u503C\u3002</p><h2 id="_1-reduce-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-reduce-\u65B9\u6CD5" aria-hidden="true">#</a> 1. reduce() \u65B9\u6CD5</h2><p><code>reduce()</code> \u65B9\u6CD5\u63A5\u6536\u4E00\u4E2A\u51FD\u6570 <code>callbackfn</code> \u4F5C\u4E3A\u7D2F\u52A0\u5668\uFF08<code>accumulator</code>\uFF09\uFF0C\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u503C\uFF08\u4ECE\u5DE6\u5230\u53F3\uFF09\u5F00\u59CB\u5408\u5E76\uFF0C\u6700\u7EC8\u4E3A\u4E00\u4E2A\u503C\u3002</p><p>\u8BED\u6CD5\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>array.reduce<span class="token punctuation">(</span>callbackfn, <span class="token punctuation">[</span>initialValue<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><code>reduce()</code> \u65B9\u6CD5\u63A5\u6536 <code>callbackfn</code> \u51FD\u6570\uFF0C\u800C\u8FD9\u4E2A\u51FD\u6570\u5305\u542B\u56DB\u4E2A\u53C2\u6570\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">function</span> callbackfn<span class="token punctuation">(</span>preValue,curValue,index,array<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li><code>preValue</code> - \u4E0A\u4E00\u6B21\u8C03\u7528\u56DE\u8C03\u8FD4\u56DE\u7684\u503C\uFF0C\u6216\u8005\u662F\u63D0\u4F9B\u7684\u521D\u59CB\u503C\uFF08<code>initialValue</code>\uFF09</li><li><code>curValue</code> - \u6570\u7EC4\u4E2D\u5F53\u524D\u88AB\u5904\u7406\u7684\u6570\u7EC4\u9879</li><li><code>index</code> - \u5F53\u524D\u6570\u7EC4\u9879\u5728\u6570\u7EC4\u4E2D\u7684\u7D22\u5F15\u503C</li><li><code>array</code> - \u8C03\u7528 <code>reduce()</code> \u65B9\u6CD5\u7684\u6570\u7EC4</li></ul><p>\u800C <code>initialValue</code> \u4F5C\u4E3A\u7B2C\u4E00\u6B21\u8C03\u7528 <code>callbackfn</code> \u51FD\u6570\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

array<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">preValue<span class="token punctuation">,</span> curValue<span class="token punctuation">,</span> index<span class="token punctuation">,</span> array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> preValue <span class="token operator">+</span> curValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_2-reduceright-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-reduceright-\u65B9\u6CD5" aria-hidden="true">#</a> 2. reduceRight() \u65B9\u6CD5</h2><p><code>reduceRight()</code> \u65B9\u6CD5\u7684\u529F\u80FD\u548C <code>reduce()</code> \u529F\u80FD\u662F\u4E00\u6837\u7684\uFF0C\u4E0D\u540C\u7684\u662F <code>reduceRight()</code> \u4ECE\u6570\u7EC4\u7684\u672B\u5C3E\u5411\u524D\u5C06\u6570\u7EC4\u4E2D\u7684\u6570\u7EC4\u9879\u505A\u7D2F\u52A0\u3002</p><p><code>reduceRight()</code> \u9996\u6B21\u8C03\u7528\u56DE\u8C03\u51FD\u6570 <code>callbackfn</code> \u65F6\uFF0C<code>prevValue</code> \u548C <code>curValue</code> \u53EF\u4EE5\u662F\u4E24\u4E2A\u503C\u4E4B\u4E00\u3002\u5982\u679C\u8C03\u7528 <code>reduceRight()</code> \u65F6\u63D0\u4F9B\u4E86 <code>initialValue</code> \u53C2\u6570\uFF0C\u5219 <code>prevValue</code> \u7B49\u4E8E <code>initialValue</code>\uFF0C<code>curValue</code> \u7B49\u4E8E\u6570\u7EC4\u4E2D\u7684\u6700\u540E\u4E00\u4E2A\u503C\u3002\u5982\u679C\u6CA1\u6709\u63D0\u4F9B <code>initialValue</code> \u53C2\u6570\uFF0C\u5219 <code>prevValue</code> \u7B49\u4E8E\u6570\u7EC4\u6700\u540E\u4E00\u4E2A\u503C\uFF0C <code>curValue</code> \u7B49\u4E8E\u6570\u7EC4\u4E2D\u5012\u6570\u7B2C\u4E8C\u4E2A\u503C\u3002</p><p>\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

arr<span class="token punctuation">.</span><span class="token function">reduceRight</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">preValue<span class="token punctuation">,</span> curValue<span class="token punctuation">,</span> index<span class="token punctuation">,</span> array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> preValue <span class="token operator">+</span> curValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,22);function e(t,c){return p}var l=s(a,[["render",e]]);export{l as default};
