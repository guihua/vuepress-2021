import{r as p,o as t,c as e,a as n,e as o,F as c,b as s,d as l}from"./app.147292e0.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i=n("h1",{id:"bitmap-\u7B97\u6CD5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#bitmap-\u7B97\u6CD5","aria-hidden":"true"},"#"),s(" bitMap \u7B97\u6CD5")],-1),k=n("h2",{id:"\u6570\u636E\u7ED3\u6784",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6570\u636E\u7ED3\u6784","aria-hidden":"true"},"#"),s(" \u6570\u636E\u7ED3\u6784")],-1),b=s("bitMap \u6570\u636E\u7ED3\u6784"),m=n("strong",null,"\u5E38\u7528\u4E8E\u5927\u91CF\u6574\u578B\u6570\u636E\u505A\u53BB\u91CD\u548C\u67E5\u8BE2",-1),d=s("\uFF0C"),h={href:"https://www.seoxiehui.cn/article-45186-1.html",target:"_blank",rel:"noopener noreferrer"},f=s("\u300ABitmap\u7B97\u6CD5\u300B"),_=s(" \u8FD9\u7BC7\u6587\u7AE0\u4E2D\u662F\u57FA\u4E8E Java \u8BED\u8A00\u53CA\u6570\u636E\u5E93\u4F18\u5316\u8FDB\u884C\u89E3\u91CA\u7684\u56FE\u6587\u6559\u7A0B\u3002"),v=l(`<p>bitMap \u662F\u5229\u7528\u4E86\u4E8C\u8FDB\u5236\u6765\u63CF\u8FF0\u72B6\u6001\u7684\u4E00\u79CD\u6570\u636E\u7ED3\u6784\uFF0C\u4E0B\u9762\u4ECB\u7ECD\u5176\u7B80\u5355\u7684\u539F\u7406\u3002</p><h3 id="_1-\u601D\u8003\u4E0B\u9762\u7684\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_1-\u601D\u8003\u4E0B\u9762\u7684\u95EE\u9898" aria-hidden="true">#</a> \uFF081\uFF09\u601D\u8003\u4E0B\u9762\u7684\u95EE\u9898</h3><p>\u8857\u8FB9\u6709 8 \u76CF\u8DEF\u706F\uFF0C\u7F16\u53F7\u5206\u522B\u662F 1 2 3 4 5 6 7 8\uFF0C\u5176\u4E2D 2 \u53F7\uFF0C5 \u53F7\uFF0C7 \u53F7\uFF0C8 \u53F7\u8DEF\u706F\u662F\u4EAE\u7740\u7684\uFF0C\u5176\u4F59\u7684\u90FD\u5904\u4E8E\u4E0D\u4EAE\u7684\u72B6\u6001\uFF0C\u8BF7\u4F60\u8BBE\u8BA1\u4E00\u79CD\u7B80\u5355\u7684\u65B9\u6CD5\u6765\u8868\u793A\u8FD9 8 \u6808\u8DEF\u706F\u4EAE\u4E0E\u4E0D\u4EAE\u7684\u72B6\u6001\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\u8DEF\u706F  <span class="token number">1</span>   <span class="token number">2</span>   <span class="token number">3</span>   <span class="token number">4</span>   <span class="token number">5</span>   <span class="token number">6</span>   <span class="token number">7</span>   <span class="token number">8</span>
\u72B6\u6001  <span class="token number">0</span>   <span class="token number">1</span>   <span class="token number">0</span>   <span class="token number">0</span>   <span class="token number">1</span>   <span class="token number">0</span>   <span class="token number">1</span>   <span class="token number">1</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5C06\u72B6\u6001\u8F6C\u5316\u4E3A\u4E8C\u8FDB\u5236 <code>parseInt(1001011, 2);</code> \u7ED3\u679C\u4E3A 75\u3002\u4E00\u4E2A <code>Number</code> \u7C7B\u578B\u7684\u503C\u4E3A 32 \u4E2A\u5B57\u8282\uFF0C\u5B83\u53EF\u4EE5\u8868\u793A 32 \u6808\u8DEF\u706F\u7684\u72B6\u6001\u3002\u8FD9\u6837\u5728\u5927\u6570\u636E\u91CF\u7684\u5904\u7406\u4E2D\uFF0CbitMap \u5C31\u6709\u5F88\u5927\u7684\u4F18\u52BF\u3002</p><h3 id="_2-\u4F4D\u8FD0\u7B97\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#_2-\u4F4D\u8FD0\u7B97\u4ECB\u7ECD" aria-hidden="true">#</a> \uFF082\uFF09\u4F4D\u8FD0\u7B97\u4ECB\u7ECD</h3><ol><li>\u6309\u4F4D\u4E0E <code>&amp;</code>: <code>3&amp;7=3</code>\u3010<code>011 &amp; 111 --&gt; 011</code>\u3011</li><li>\u6309\u4F4D\u6216 <code>|</code>: <code>3|7=7</code>\u3010<code>011 | 111 --&gt; 111</code>\u3011</li><li>\u5DE6\u4F4D\u79FB <code>&lt;&lt;</code>: <code>1&lt;&lt;3=8</code>\u3010<code>1 --&gt; 1000</code>\u3011</li></ol><h3 id="_3-\u5B9E\u8DF5" tabindex="-1"><a class="header-anchor" href="#_3-\u5B9E\u8DF5" aria-hidden="true">#</a> \uFF083\uFF09\u5B9E\u8DF5</h3><p>\u4E00\u7EC4\u6570\uFF0C\u5185\u5BB9\u4EE5\u4E3A 3,6,7,9\uFF0C\u8BF7\u7528\u4E00\u4E2A\u6574\u6570\u6765\u8868\u793A\u8FD9\u4E9B\u56DB\u4E2A\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
value <span class="token operator">=</span> value <span class="token operator">|</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// 1000</span>
value <span class="token operator">=</span> value <span class="token operator">|</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">6</span><span class="token punctuation">;</span> <span class="token comment">// 1001000</span>
value <span class="token operator">=</span> value <span class="token operator">|</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">7</span><span class="token punctuation">;</span> <span class="token comment">// 11001000</span>
value <span class="token operator">=</span> value <span class="token operator">|</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">9</span><span class="token punctuation">;</span> <span class="token comment">// 1011001000</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 712</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u8FD9\u6837\uFF0C\u5341\u8FDB\u5236\u6570 712 \u7684\u4E8C\u8FDB\u5236\u5F62\u5F0F\u5BF9\u5E94\u7684\u4F4D\u6570\u4E3A 1 \u7684\u503C\u4FBF\u4E3A\u6570\u7EC4\u4E2D\u7684\u6570\u503C\u3002</p><h2 id="bitmap-\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#bitmap-\u7684\u5B9E\u73B0" aria-hidden="true">#</a> bitMap \u7684\u5B9E\u73B0</h2><p>\u901A\u8FC7\u4E0A\u9762\u7684\u4ECB\u7ECD\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5B9E\u73B0\u4E00\u4E2A\u7B80\u5355\u7684 bitMap \u7C7B\uFF0C\u6709\u4E0B\u9762\u4E24\u4E2A\u65B9\u6CD5\uFF1A</p><ul><li><code>addMember</code> \u6DFB\u52A0\u6210\u5458</li><li><code>isExist</code> \u6210\u5458\u662F\u5426\u5B58\u5728</li></ul><p>\u5206\u6790\uFF1A</p><ul><li>\u5355\u4E2A\u6570\u503C\u65E2\u80FD\u8868\u793A 0~32 \u7684\u503C\uFF0C\u82E5\u4EE5\u6570\u7EC4\u4F5C\u4E3A\u57FA\u7840\uFF0CbitMap \u80FD\u5BB9\u7EB3\u7684\u6210\u5458\u7531\u6570\u7EC4\u957F\u5EA6\u51B3\u5B9A <code>64 * \u6570\u7EC4\u957F\u5EA6</code></li><li><code>addMember</code> \u6DFB\u52A0\u6210\u5458\uFF1A\u6570\u7EC4/\u4F4D\u6570\u5411\u4E0B\u53D6\u6574\u8868\u793A\u6240\u5728\u7D22\u5F15\uFF0C\u6570\u7EC4/\u4F4D\u6570\u53D6\u4F59\u8868\u793A\u6240\u5728\u4E8C\u8FDB\u5236\u7684\u4F4D\u6570</li><li><code>isExist</code> \u6210\u5458\u662F\u5426\u5B58\u5728\uFF1A\u6DFB\u52A0\u6210\u5458\u7684\u53CD\u5411\u8BA1\u7B97</li></ul><p>\u6211\u4EEC\u5148\u5B9E\u73B0\u57FA\u7840\u8BFB\u5199\u4F4D\u7684\u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">BIT_SIZE</span> <span class="token operator">=</span> <span class="token number">32</span><span class="token punctuation">;</span>

<span class="token comment">// \u8BBE\u7F6E\u4F4D\u7684\u503C</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">setBit</span><span class="token punctuation">(</span><span class="token parameter">bitMap<span class="token punctuation">,</span> bit</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arrIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>bit <span class="token operator">/</span> <span class="token constant">BIT_SIZE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> bitIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>bit <span class="token operator">%</span> <span class="token constant">BIT_SIZE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  bitMap<span class="token punctuation">[</span>arrIndex<span class="token punctuation">]</span> <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> bitIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8BFB\u53D6\u4F4D\u7684\u503C</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getBit</span><span class="token punctuation">(</span><span class="token parameter">bitMap<span class="token punctuation">,</span> bit</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arrIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>bit <span class="token operator">/</span> <span class="token constant">BIT_SIZE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> bitIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>bit <span class="token operator">%</span> <span class="token constant">BIT_SIZE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> bitMap<span class="token punctuation">[</span>arrIndex<span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> bitIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u8FDB\u800C\u6839\u636E\u4E0A\u9762\u7684\u65B9\u6CD5\u5F97\u5230\u4E0B\u9762\u7684\u7C7B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">BitMap</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">size</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_bitArr <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      length<span class="token operator">:</span> size
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">addMember</span><span class="token punctuation">(</span><span class="token parameter">member</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setBit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_bitArr<span class="token punctuation">,</span> member<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">isExist</span><span class="token punctuation">(</span><span class="token parameter">member</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> isExist <span class="token operator">=</span> <span class="token function">getBit</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_bitArr<span class="token punctuation">,</span> member<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">Boolean</span><span class="token punctuation">(</span>isExist<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u9A8C\u8BC1</span>
<span class="token keyword">const</span> bitMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BitMap</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  bitMap<span class="token punctuation">.</span><span class="token function">addMember</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bitMap<span class="token punctuation">.</span><span class="token function">isExist</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bitMap<span class="token punctuation">.</span><span class="token function">isExist</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bitMap<span class="token punctuation">.</span><span class="token function">isExist</span><span class="token punctuation">(</span><span class="token number">78</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>\u6CE8\u610F\uFF1A\u8FD9\u79CD\u7ED3\u6784\u4E5F\u6709\u5176<strong>\u5C40\u9650\u6027</strong>\uFF1A</p><ol><li>\u6570\u636E\u96C6\u8981\u6C42\u8F83\u4E3A\u7D27\u51D1\uFF0C[1, 1000000]\u8FD9\u79CD\u7ED3\u6784\u7A7A\u95F4\u5229\u7528\u8FC7\u4F4E\uFF0C\u4E0D\u5229\u4E8E\u53D1\u6325bitMap\u7684\u4F18\u52BF</li><li>\u4EC5\u5BF9\u6574\u6570\u6709\u6548\uFF08\u5F53\u7136\uFF0C\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u54C8\u5E0C\u51FD\u6570\u5C06\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u6574\u578B\uFF09</li></ol><h2 id="bitmap\u7684\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#bitmap\u7684\u5E94\u7528" aria-hidden="true">#</a> bitMap\u7684\u5E94\u7528</h2><h3 id="_1-\u5927\u6570\u636E\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#_1-\u5927\u6570\u636E\u6392\u5E8F" aria-hidden="true">#</a> \uFF081\uFF09\u5927\u6570\u636E\u6392\u5E8F</h3><p>\u8981\u6C42\uFF1A\u6709\u591A\u8FBE 10 \u4EBF\u65E0\u5E8F\u6574\u6570\uFF0C\u5DF2\u77E5\u6700\u5927\u503C\u4E3A 15 \u4EBF\uFF0C\u8BF7\u5BF9\u8FD9\u4E2A 10 \u4EBF\u4E2A\u6570\u8FDB\u884C\u6392\u5E8F\u3002 \u5206\u6790\uFF1A\u5927\u6570\u636E\u7684\u6392\u5E8F\uFF0C\u4F20\u7EDF\u7684\u6392\u5E8F\u65B9\u5F0F\u76F8\u5BF9\u5185\u5B58\u5360\u7528\u8F83\u5927\uFF0C\u4F7F\u7528 bitMap \u4EC5\u5360\u539F\u5185\u5B58\u7684(JS \u4E2D\u4E3A 1/64\uFF0CJava \u4E2D\u4E3A 1/32)\u3002 \u5B9E\u73B0\uFF1A\u6A21\u62DF\u5927\u6570\u636E\u5B9E\u73B0\uFF0C\u5982\u4E0B\uFF08\u6700\u5927\u503C\u4E3A 99\uFF09\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">73</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">MAX_NUMBER</span> <span class="token operator">=</span> <span class="token number">99</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> ret <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> bitMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BitMap</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> bitMap<span class="token punctuation">.</span><span class="token function">addMember</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token constant">MAX_NUMBER</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>bitMap<span class="token punctuation">.</span><span class="token function">isExist</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> ret<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ 0, 6, 7, 10, 22, 34, 73, 88, 99 ]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="_2-\u4E24\u4E2A\u96C6\u5408\u53D6\u4EA4\u96C6" tabindex="-1"><a class="header-anchor" href="#_2-\u4E24\u4E2A\u96C6\u5408\u53D6\u4EA4\u96C6" aria-hidden="true">#</a> \uFF082\uFF09\u4E24\u4E2A\u96C6\u5408\u53D6\u4EA4\u96C6</h3><p>\u8981\u6C42\uFF1A\u4E24\u4E2A\u6570\u7EC4\uFF0C\u5185\u5BB9\u5206\u522B\u4E3A [1, 4, 6, 8, 9, 10, 15], [6, 14, 9, 2, 0, 7]\uFF0C\u8BF7\u7528 BitMap \u8BA1\u7B97\u4ED6\u4EEC\u7684\u4EA4\u96C6 \u5206\u6790\uFF1A\u5229\u7528 <code>isExist()</code> \u6765\u7B5B\u9009\u76F8\u540C\u9879 \u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> intersectionArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> bitMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BitMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
arr1<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> bitMap<span class="token punctuation">.</span><span class="token function">addMember</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>

arr2<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>bitMap<span class="token punctuation">.</span><span class="token function">isExist</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    intersectionArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>intersectionArr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [6, 9]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>BitMap \u6570\u636E\u7ED3\u6784\u7684\u7528\u6CD5\u539F\u4E0D\u6B62\u5982\u6B64\uFF0C\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u54C8\u5E0C\u51FD\u6570\u5C06\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u6574\u6570\uFF0C\u518D\u8FDB\u884C\u5904\u7406\u3002\u5F53\u7136\uFF0C\u6211\u4EEC\u5E94\u8BE5\u59CB\u7EC8\u7262\u8BB0 BitMap \u5FC5\u987B\u662F\u76F8\u5BF9\u8F83\u4E3A\u7D27\u5BC6\u7684\u6570\u5B57\uFF0C\u5426\u5219\u65E0\u6CD5\u53D1\u6325 BitMap \u7684\u6700\u5927\u529F\u6548\u3002</p>`,30);function g(M,x){const a=p("ExternalLinkIcon");return t(),e(c,null,[i,k,n("p",null,[b,m,d,n("a",h,[f,o(a)]),_]),v],64)}var B=u(r,[["render",g]]);export{B as default};
