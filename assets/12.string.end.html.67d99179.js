import{d as n}from"./app.147292e0.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},t=n(`<h1 id="\u5B57\u5C3E\u786E\u8BA4" tabindex="-1"><a class="header-anchor" href="#\u5B57\u5C3E\u786E\u8BA4" aria-hidden="true">#</a> \u5B57\u5C3E\u786E\u8BA4</h1><p>\u5BF9\u6240\u7ED9\u7684\u5B57\u7B26\u4E32\uFF08\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF09\u786E\u8BA4\u662F\u5426\u662F\u4EE5\u7B2C\u4E8C\u4E2A\u53C2\u6570\u7ED3\u5C3E\uFF0C\u5982\u679C\u662F\u5219\u8FD4\u56DE <code>true</code>\uFF0C\u5426\u5219\u8FD4\u56DE <code>false</code>\u3002</p><p>\u5B9E\u73B0 <code>end(str,target)</code> \u51FD\u6570\u7684\u601D\u8DEF\uFF1A</p><ul><li>\u8FD0\u7528 <code>String.prototype.substr()</code>\uFF0C\u6765\u8BC6\u522B <code>str</code> \u7ED3\u5C3E\u7684\u5B57\u7B26</li><li>\u58F0\u660E\u53D8\u91CF <code>endingPart</code> \u662F <code>str</code> \u5B57\u7B26\u7684\u6700\u540E\u5B57\u7B26\uFF0C\u6700\u540E\u5B57\u7B26\u7684\u957F\u5EA6\u7B49\u4E8E <code>target</code> \u7684\u957F\u5EA6</li><li>\u5982\u679C <code>target === endingPart</code> \u8FD4\u56DE <code>true</code>,\u5426\u5219\u8FD4\u56DE <code>false</code></li></ul><p>\u8FD9\u91CC\u6700\u4E3A\u91CD\u8981\u7684\u662F\u6211\u4EEC\u8981\u83B7\u53D6\u5B57\u7B26\u4E32 <code>str</code> \u7684\u672B\u5C5E\u7684\u5B57\u7B26\uFF0C\u4E5F\u5C31\u662F <code>endingPart</code>\u3002\u5176\u4E2D <code>endingPart</code> \u9700\u8981\u5177\u5907\u7684\u6761\u4EF6\uFF1A</p><ul><li><code>endingPart</code> \u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u800C\u4E14\u662F <code>str</code> \u672B\u5C3E\u7684\u5B57\u7B26\u4E32\uFF08\u4ECE <code>str</code> \u6700\u53F3\u8FB9\u5411\u6700\u5DE6\u8FB9\u622A\u53D6\uFF09</li><li><code>endingPart</code> \u7684\u957F\u5EA6\u548C <code>target</code> \u5B57\u7B26\u957F\u5EA6\u76F8\u7B49</li></ul><p>\u65B9\u6CD5\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token operator">-</span>target<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">===</span> target<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6216\u8005\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">-</span> target<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">===</span> target<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8003\u8651\u5230 <code>target</code> \u5B57\u6BB5\u6709\u53EF\u80FD\u4E3A\u7A7A\u7684\u60C5\u51B5\uFF0C\u6211\u4EEC\u589E\u52A0\u5224\u65AD\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> target<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> target <span class="token operator">===</span> str<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token operator">-</span>target<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5176\u4ED6\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// slice() \u65B9\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> target <span class="token operator">===</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span>target<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// indexOf() \u65B9\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> str<span class="token punctuation">.</span>length <span class="token operator">-</span> target<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// lastIndexOf() \u65B9\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">===</span> str<span class="token punctuation">.</span>length <span class="token operator">-</span> target<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u6D4B\u8BD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;Bastian&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;Connor&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;Walking on water and developing software from a specification are easy if both are frozen&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;specification&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;He has to give me a new name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;He has to give me a new name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;me&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;He has to give me a new name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;na&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;If you want to save our world, you must hurry. We dont know how much longer we can withstand the nothing&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mountain&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5728 ES6 \u4E2D\u63D0\u4F9B\u4E86\u4E00\u4E2A\u539F\u751F\u7684\u65B9\u6CD5 <code>endsWith()</code> \u65B9\u6CD5\uFF0C\u53EF\u4EE5\u975E\u5E38\u7B80\u5355\u7684\u5B9E\u73B0\u6211\u4EEC\u6240\u8981\u7684\u529F\u80FD\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,18);function p(e,o){return t}var l=s(a,[["render",p]]);export{l as default};
